<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
					xmlns:telerikDocking="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Docking" 
					xmlns:System="clr-namespace:System;assembly=mscorlib" 
					xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" 
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
					xmlns:Chromes="clr-namespace:Telerik.Windows.Controls.Chromes;assembly=Telerik.Windows.Controls" 
					xmlns:TabControl="clr-namespace:Telerik.Windows.Controls.TabControl;assembly=Telerik.Windows.Controls.Navigation" 
					xmlns:Primitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls.Navigation" 
					xmlns:Custom="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" 
                    xmlns:Custom1="http://metro.mahapps.com/winfx/xaml/shared" 
					xmlns:TileView="clr-namespace:Telerik.Windows.Controls.TileView;assembly=Telerik.Windows.Controls.Navigation" 
					mc:Ignorable="d">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="BrushColors.xaml"/>
		<ResourceDictionary Source="Font.xaml"/>
	</ResourceDictionary.MergedDictionaries>
    
	<Style TargetType="{x:Type telerik:RadPaneGroup}">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="#FF1c6f93"/>
		<Setter Property="Background" Value="#FF1c6f93"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPaneGroup}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" MinHeight="20"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled"/>
								<VisualState x:Name="Normal"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="AutoCollapseStates">
								<VisualState x:Name="SingleItem">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsContainer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TwoOrMoreItems"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PaneHeaderVisibilityStates">
								<VisualState x:Name="PaneHeaderHidden">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PaneHeaderVisible"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ResizerStates">
								<VisualState x:Name="ResizerLeft">
									<Storyboard>
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DockResizer">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="DockResizer">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<System:Double>4</System:Double>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ItemsContainer">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Thickness>4,-5,0,0</Thickness>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentBackground">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Thickness>4,0,0,0</Thickness>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ResizerTop">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="VerticalAlignment" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<VerticalAlignment>Top</VerticalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="HorizontalAlignment" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<HorizontalAlignment>Stretch</HorizontalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Placement" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Dock>Top</Dock>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Double>4</System:Double>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>1</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>0</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentBackground">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,4,0,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HideResizer"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentControl x:Name="ContentBackground" BorderBrush="#FFFFFFF" BorderThickness="0" Background="{TemplateBinding Background}">
							<ContentControl.Style>
								<Style TargetType="{x:Type ContentControl}">
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type ContentControl}">
												<Border x:Name="Root"  CornerRadius="0">
													<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</ContentControl.Style>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>
								<Border Grid.Row="0" Visibility="{Binding SelectedItem.PaneHeaderVisibility, RelativeSource={RelativeSource TemplatedParent}}">
									<telerik:PaneHeader x:Name="HeaderElement" MinHeight="20" Grid.Row="0" SelectedPane="{TemplateBinding SelectedPane}">
										<telerik:StyleManager.Theme>
											<telerik:Office_BlackTheme/>
										</telerik:StyleManager.Theme>
									</telerik:PaneHeader>
								</Border>
								<Grid Grid.Row="1">
									<ContentPresenter x:Name="ContentElement" ContentTemplate="{TemplateBinding SelectedContentTemplate}">
										<ContentPresenter.Visibility>
											<Binding Path="IsContentPreserved" RelativeSource="{RelativeSource TemplatedParent}">
												<Binding.Converter>
													<telerik:InvertedBooleanToVisibilityConverter/>
												</Binding.Converter>
											</Binding>
										</ContentPresenter.Visibility>
									</ContentPresenter>
									<Grid x:Name="ContentElementsPanel">
										<Grid.Visibility>
											<Binding Path="IsContentPreserved" RelativeSource="{RelativeSource TemplatedParent}">
												<Binding.Converter>
													<telerik:BooleanToVisibilityConverter/>
												</Binding.Converter>
											</Binding>
										</Grid.Visibility>
									</Grid>
								</Grid>
							</Grid>
						</ContentControl>
						<Border x:Name="ItemsContainer" Margin="0,-5,0,0" Padding="0,0,1,0" Grid.Row="1">
							<ItemsPresenter x:Name="ItemsPresenterElement"/>
						</Border>
						<telerik:RadGridResizer x:Name="DockResizer" Cursor="SizeWE" HorizontalAlignment="Left" Stylus.IsFlicksEnabled="False" Stylus.IsPressAndHoldEnabled="False" Placement="Left" Grid.RowSpan="2" ShowsPreview="True" Visibility="Collapsed" VerticalAlignment="Stretch">
							<telerik:StyleManager.Theme>
								<telerik:Office_BlackTheme/>
							</telerik:StyleManager.Theme>
						</telerik:RadGridResizer>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BottomTemplate">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPaneGroup}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" MinHeight="20"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled"/>
								<VisualState x:Name="Normal"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="AutoCollapseStates">
								<VisualState x:Name="SingleItem">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsContainer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TwoOrMoreItems"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PaneHeaderVisibilityStates">
								<VisualState x:Name="PaneHeaderHidden">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PaneHeaderVisible"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ResizerStates">
								<VisualState x:Name="ResizerLeft">
									<Storyboard>
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DockResizer">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="DockResizer">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<System:Double>4</System:Double>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ItemsContainer">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Thickness>4,-5,0,0</Thickness>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentBackground">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Thickness>4,0,0,0</Thickness>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ResizerTop">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="VerticalAlignment" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<VerticalAlignment>Top</VerticalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="HorizontalAlignment" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<HorizontalAlignment>Stretch</HorizontalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Placement" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Dock>Top</Dock>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Double>4</System:Double>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>1</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>0</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentBackground">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,4,0,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HideResizer"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentControl x:Name="ContentBackground" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
							<ContentControl.Style>
								<Style TargetType="{x:Type ContentControl}">
									
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type ContentControl}">
												<Border   x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0">
													<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</ContentControl.Style>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>
								<Border Grid.Row="0" Visibility="{Binding SelectedItem.PaneHeaderVisibility, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="0" BorderThickness="0" Background="{StaticResource DockPanelBGBrush}" >
									<telerik:PaneHeader x:Name="HeaderElement" MinHeight="25" Grid.Row="0" SelectedPane="{TemplateBinding SelectedPane}" Background="{StaticResource DockPanelBGBrush}" Foreground="White" BorderBrush="{StaticResource DockPanelBGBrush}" Template="{DynamicResource PaneHeaderControlTemplate1}">
										<telerik:StyleManager.Theme>
											<telerik:Office_BlackTheme/>
										</telerik:StyleManager.Theme>
									</telerik:PaneHeader>
								</Border>
								<Grid Grid.Row="1">
									<ContentPresenter x:Name="ContentElement" ContentTemplate="{TemplateBinding SelectedContentTemplate}">
										<ContentPresenter.Visibility>
											<Binding Path="IsContentPreserved" RelativeSource="{RelativeSource TemplatedParent}">
												<Binding.Converter>
													<telerik:InvertedBooleanToVisibilityConverter/>
												</Binding.Converter>
											</Binding>
										</ContentPresenter.Visibility>
									</ContentPresenter>
									<Grid x:Name="ContentElementsPanel">
										<Grid.Visibility>
											<Binding Path="IsContentPreserved" RelativeSource="{RelativeSource TemplatedParent}">
												<Binding.Converter>
													<telerik:BooleanToVisibilityConverter/>
												</Binding.Converter>
											</Binding>
										</Grid.Visibility>
									</Grid>
								</Grid>
							</Grid>
						</ContentControl>
						<Border x:Name="ItemsContainer" Margin="0,-5,0,0" Padding="0,0,1,0" Grid.Row="1">
							<ItemsPresenter x:Name="ItemsPresenterElement"/>
						</Border>
						<telerik:RadGridResizer x:Name="DockResizer" Cursor="SizeWE" HorizontalAlignment="Left" Stylus.IsFlicksEnabled="False" Stylus.IsPressAndHoldEnabled="False" Placement="Left" Grid.RowSpan="2" ShowsPreview="True" Visibility="Collapsed" VerticalAlignment="Stretch">
							<telerik:StyleManager.Theme>
								<telerik:Office_BlackTheme/>
							</telerik:StyleManager.Theme>
						</telerik:RadGridResizer>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="TopTemplate">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPaneGroup}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled"/>
								<VisualState x:Name="Normal"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DropDownDisplayStates">
								<VisualState x:Name="DropDownButtonCollapsed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DropDownButtonElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DropDownButtonVisible">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DropDownButtonElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ResizerStates">
								<VisualState x:Name="ResizerLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Double>4</System:Double>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ItemsPresenterElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>4,2,0,2</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentBackground">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>4,0,0,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ResizerTop">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="VerticalAlignment" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<VerticalAlignment>Top</VerticalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="HorizontalAlignment" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<HorizontalAlignment>Stretch</HorizontalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Placement" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Dock>Top</Dock>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Double>4</System:Double>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>1</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>0</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Header">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,4,0,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HideResizer"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentControl x:Name="ContentBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#FFE0E0E0" Grid.Row="1">
							<ContentControl.Style>
								<Style TargetType="{x:Type ContentControl}">
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type ContentControl}">
												<Border x:Name="Root" BorderBrush="#ffffffff" BorderThickness="0" Background="#ffffffff" CornerRadius="0">
													<Border x:Name="BorderLayer3"   BorderBrush="#ffffffff" BorderThickness="0" Background="#ffffffff" CornerRadius="0">
														<Border x:Name="BorderLayer2"   BorderBrush="#ffffffff" BorderThickness="0" Background="#ffffffff" CornerRadius="0">
															<Border x:Name="BorderLayer1"  BorderBrush="#ffffffff" BorderThickness="0" Background="#ffffffff" CornerRadius="0">
																<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
															</Border>
														</Border>
													</Border>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</ContentControl.Style>
							<Grid>
								<ContentPresenter x:Name="ContentElement" ContentTemplate="{TemplateBinding SelectedContentTemplate}">
									<ContentPresenter.Visibility>
										<Binding Path="IsContentPreserved" RelativeSource="{RelativeSource TemplatedParent}">
											<Binding.Converter>
												<telerik:InvertedBooleanToVisibilityConverter/>
											</Binding.Converter>
										</Binding>
									</ContentPresenter.Visibility>
								</ContentPresenter>
								<Grid x:Name="ContentElementsPanel">
									<Grid.Visibility>
										<Binding Path="IsContentPreserved" RelativeSource="{RelativeSource TemplatedParent}">
											<Binding.Converter>
												<telerik:BooleanToVisibilityConverter/>
											</Binding.Converter>
										</Binding>
									</Grid.Visibility>
								</Grid>
							</Grid>
						</ContentControl>
						<Grid x:Name="Header" Grid.Row="0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<RepeatButton x:Name="LeftScrollButtonElement" Grid.Column="0" Visibility="{Binding ComputedHorizontalScrollBarVisibility, ElementName=ScrollViewerElement}">
								<RepeatButton.Style>
									<Style TargetType="{x:Type RepeatButton}">
										<Setter Property="Width" Value="17"/>
										<Setter Property="Height" Value="17"/>
										<Setter Property="Margin" Value="1"/>
										<Setter Property="IsTabStop" Value="False"/>
										<Setter Property="SnapsToDevicePixels" Value="True"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type RepeatButton}">
													<Grid x:Name="LayoutRoot">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CommonStates">
																<VisualState x:Name="Disabled">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FF8D8D8D"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Normal"/>
																<VisualState x:Name="MouseOver">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="Black"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Pressed">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="Black"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Chromes:ButtonChrome RenderNormal="False" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}">
															<telerik:StyleManager.Theme>
																<telerik:Office_BlackTheme/>
															</telerik:StyleManager.Theme>
														</Chromes:ButtonChrome>
														<Path x:Name="BackgroundIcon" Data="M6,0L6,7 5,7 5,6 4,6 4,5 3,5 3,4 2,4 2,3 3,3 3,2 4,2 4,1 5,1 5,0z" Fill="White" Height="7" Margin="0,2,0,0" Width="7"/>
														<Path x:Name="ForegroundIcon" Data="M6,0L6,7 5,7 5,6 4,6 4,5 3,5 3,4 2,4 2,3 3,3 3,2 4,2 4,1 5,1 5,0z" Fill="Black" Height="7" Margin="0,1" Width="7"/>
													</Grid>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</RepeatButton.Style>
							</RepeatButton>
							<ScrollViewer x:Name="ScrollViewerElement" Grid.Column="1" HorizontalScrollBarVisibility="{Binding (ScrollViewer.HorizontalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}" Margin="0,-2">
								<ScrollViewer.Template>
									<ControlTemplate TargetType="{x:Type ScrollViewer}">
										<ScrollContentPresenter x:Name="ScrollContentPresenter" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="0,0,1,0"/>
									</ControlTemplate>
								</ScrollViewer.Template>
								<ItemsPresenter x:Name="ItemsPresenterElement" Margin="0,2"/>
							</ScrollViewer>
							<RepeatButton x:Name="RightScrollButtonElement" Grid.Column="2" Visibility="{Binding ComputedHorizontalScrollBarVisibility, ElementName=ScrollViewerElement}">
								<RepeatButton.Style>
									<Style TargetType="{x:Type RepeatButton}">
										<Setter Property="Width" Value="17"/>
										<Setter Property="Height" Value="17"/>
										<Setter Property="Margin" Value="1"/>
										<Setter Property="IsTabStop" Value="False"/>
										<Setter Property="SnapsToDevicePixels" Value="True"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type RepeatButton}">
													<Grid x:Name="LayoutRoot">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CommonStates">
																<VisualState x:Name="Disabled">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FF8D8D8D"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Normal"/>
																<VisualState x:Name="MouseOver">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="Black"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Pressed">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="Black"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Chromes:ButtonChrome RenderNormal="False" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}">
															<telerik:StyleManager.Theme>
																<telerik:Office_BlackTheme/>
															</telerik:StyleManager.Theme>
														</Chromes:ButtonChrome>
														<Path x:Name="BackgroundIcon" Data="M1,0L1,7 2,7 2,6 3,6 3,5 4,5 4,4 5,4 5,3 4,3 4,2 3,2 3,1 2,1 2,0z" Fill="White" Height="7" Margin="0,2,0,0" Width="7"/>
														<Path x:Name="ForegroundIcon" Data="M1,0L1,7 2,7 2,6 3,6 3,5 4,5 4,4 5,4 5,3 4,3 4,2 3,2 3,1 2,1 2,0z" Fill="Black" Height="7" Margin="0,1" Width="7"/>
													</Grid>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</RepeatButton.Style>
							</RepeatButton>
							<ToggleButton x:Name="DropDownButtonElement" Grid.Column="3" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
								<telerik:RadContextMenu.ContextMenu>
									<TabControl:DropDownMenu x:Name="DropDownMenuElement" ClickToOpen="True" DisplayMemberPath="{TemplateBinding DropDownDisplayMemberPath}" ItemTemplate="{TemplateBinding ItemDropDownContentTemplate}" IconColumnWidth="0" Placement="Bottom" Style="{TemplateBinding DropDownStyle}" StaysOpen="False"/>
								</telerik:RadContextMenu.ContextMenu>
								<ToggleButton.Style>
									<Style TargetType="{x:Type ToggleButton}">
										<Setter Property="Width" Value="17"/>
										<Setter Property="Height" Value="17"/>
										<Setter Property="Margin" Value="1"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Grid>
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CommonStates">
																<VisualState x:Name="Disabled">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FF8D8D8D"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Normal"/>
																<VisualState x:Name="MouseOver">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="Black"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Pressed">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="Black"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Chromes:ButtonChrome RenderNormal="False" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderChecked="{TemplateBinding IsChecked}">
															<telerik:StyleManager.Theme>
																<telerik:Office_BlackTheme/>
															</telerik:StyleManager.Theme>
														</Chromes:ButtonChrome>
														<Path x:Name="BackgroundIcon" Data="M0,2L7,2 7,3 6,3 6,4 5,4 5,5 4,5 4,6 3,6 3,5 2,5 2,4 1,4 1,3 0,3z M0,0L7,0 7,1 0,1z" Fill="White" Height="7" Margin="0,2,0,0" Width="7"/>
														<Path x:Name="ForegroundIcon" Data="M0,2L7,2 7,3 6,3 6,4 5,4 5,5 4,5 4,6 3,6 3,5 2,5 2,4 1,4 1,3 0,3z M0,0L7,0 7,1 0,1z" Fill="Black" Height="7" Margin="0,1" Width="7"/>
													</Grid>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</ToggleButton.Style>
							</ToggleButton>
							<telerik:RadButton x:Name="CloseButton" Grid.Column="4" Command="telerik:RadDockingCommands.Close" InnerCornerRadius="0">
								<telerik:RadButton.Style>
									<Style TargetType="{x:Type telerik:RadButton}">
										<Setter Property="Width" Value="17"/>
										<Setter Property="Height" Value="17"/>
										<Setter Property="Margin" Value="1"/>
										<Setter Property="IsTabStop" Value="False"/>
										<Setter Property="SnapsToDevicePixels" Value="True"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type telerik:RadButton}">
													<Grid x:Name="LayoutRoot">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CommonStates">
																<VisualState x:Name="Disabled">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FF8D8D8D"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Normal"/>
																<VisualState x:Name="MouseOver">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="Black"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Pressed">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="Black"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Chromes:ButtonChrome RenderNormal="False" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}">
															<telerik:StyleManager.Theme>
																<telerik:Office_BlackTheme/>
															</telerik:StyleManager.Theme>
														</Chromes:ButtonChrome>
														<Path x:Name="BackgroundIcon" Data="M0,0L2,0 2,1 3,1 3,2 5,2 5,1 6,1 6,0 8,0 8,1 7,1 7,2 6,2 6,3 5,3 5,4 6,4 6,5 6,5 7,5 7,6 8,6 8,7 6,7 6,6 5,6 5,5 3,5 3,6 2,6 2,7 0,7 0,6 1,6 1,5 2,5 2,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1z" Fill="White" Height="7" Margin="0,2,0,0" Width="8"/>
														<Path x:Name="ForegroundIcon" Data="M0,0L2,0 2,1 3,1 3,2 5,2 5,1 6,1 6,0 8,0 8,1 7,1 7,2 6,2 6,3 5,3 5,4 6,4 6,5 6,5 7,5 7,6 8,6 8,7 6,7 6,6 5,6 5,5 3,5 3,6 2,6 2,7 0,7 0,6 1,6 1,5 2,5 2,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1z" Fill="Black" Height="7" Margin="0,1" Width="8"/>
													</Grid>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</telerik:RadButton.Style>
								<telerik:RadButton.Visibility>
									<Binding Path="IsEnabled" RelativeSource="{RelativeSource Self}">
										<Binding.Converter>
											<telerik:BooleanToVisibilityConverter/>
										</Binding.Converter>
									</Binding>
								</telerik:RadButton.Visibility>
							</telerik:RadButton>
						</Grid>
						<telerik:RadGridResizer x:Name="DockResizer" Cursor="SizeWE" HorizontalAlignment="Left" Stylus.IsFlicksEnabled="False" Stylus.IsPressAndHoldEnabled="False" Placement="Left" Grid.RowSpan="2" ShowsPreview="True" Visibility="Collapsed" VerticalAlignment="Stretch">
							<telerik:StyleManager.Theme>
								<telerik:Office_BlackTheme/>
							</telerik:StyleManager.Theme>
						</telerik:RadGridResizer>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="DocumentHostTemplate">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPaneGroup}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled"/>
								<VisualState x:Name="Normal"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DropDownDisplayStates">
								<VisualState x:Name="DropDownButtonCollapsed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DropDownButtonElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DropDownButtonVisible">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DropDownButtonElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ResizerStates">
								<VisualState x:Name="ResizerLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Double>4</System:Double>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ItemsPresenterElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>4,2,0,2</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentBackground">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>4,0,0,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ResizerTop">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="VerticalAlignment" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<VerticalAlignment>Top</VerticalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="HorizontalAlignment" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<HorizontalAlignment>Stretch</HorizontalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Placement" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Dock>Top</Dock>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Double>4</System:Double>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>1</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>0</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Header">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,4,0,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HideResizer"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentControl x:Name="ContentBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1">
							<ContentControl.Style>
								<Style TargetType="{x:Type ContentControl}">
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type ContentControl}">
												<Border x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="#FFE0E0E0" CornerRadius="0">
													<Border x:Name="BorderLayer3" BorderBrush="White" BorderThickness="0" CornerRadius="0">
														<Border x:Name="BorderLayer2" BorderBrush="White" BorderThickness="0" CornerRadius="0">
															<Border x:Name="BorderLayer1" BorderBrush="White" BorderThickness="0" CornerRadius="0">
																<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
															</Border>
														</Border>
													</Border>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</ContentControl.Style>
							<Grid>
								<ContentPresenter x:Name="ContentElement" ContentTemplate="{TemplateBinding SelectedContentTemplate}">
									<ContentPresenter.Visibility>
										<Binding Path="IsContentPreserved" RelativeSource="{RelativeSource TemplatedParent}">
											<Binding.Converter>
												<telerik:InvertedBooleanToVisibilityConverter/>
											</Binding.Converter>
										</Binding>
									</ContentPresenter.Visibility>
								</ContentPresenter>
								<Grid x:Name="ContentElementsPanel">
									<Grid.Visibility>
										<Binding Path="IsContentPreserved" RelativeSource="{RelativeSource TemplatedParent}">
											<Binding.Converter>
												<telerik:BooleanToVisibilityConverter/>
											</Binding.Converter>
										</Binding>
									</Grid.Visibility>
								</Grid>
							</Grid>
						</ContentControl>
						<Grid x:Name="Header" Grid.Row="0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<RepeatButton x:Name="LeftScrollButtonElement" Grid.Column="0" Visibility="{Binding ComputedHorizontalScrollBarVisibility, ElementName=ScrollViewerElement}">
								<RepeatButton.Style>
									<Style TargetType="{x:Type RepeatButton}">
										<Setter Property="Width" Value="17"/>
										<Setter Property="Height" Value="17"/>
										<Setter Property="Margin" Value="1"/>
										<Setter Property="IsTabStop" Value="False"/>
										<Setter Property="SnapsToDevicePixels" Value="True"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type RepeatButton}">
													<Grid x:Name="LayoutRoot">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CommonStates">
																<VisualState x:Name="Disabled">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FF8D8D8D"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Normal"/>
																<VisualState x:Name="MouseOver">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="Black"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Pressed">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="Black"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Chromes:ButtonChrome RenderNormal="False" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}">
															<telerik:StyleManager.Theme>
																<telerik:Office_BlackTheme/>
															</telerik:StyleManager.Theme>
														</Chromes:ButtonChrome>
														<Path x:Name="BackgroundIcon" Data="M6,0L6,7 5,7 5,6 4,6 4,5 3,5 3,4 2,4 2,3 3,3 3,2 4,2 4,1 5,1 5,0z" Fill="White" Height="7" Margin="0,2,0,0" Width="7"/>
														<Path x:Name="ForegroundIcon" Data="M6,0L6,7 5,7 5,6 4,6 4,5 3,5 3,4 2,4 2,3 3,3 3,2 4,2 4,1 5,1 5,0z" Fill="Black" Height="7" Margin="0,1" Width="7"/>
													</Grid>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</RepeatButton.Style>
							</RepeatButton>
							<ScrollViewer x:Name="ScrollViewerElement" Grid.Column="1" HorizontalScrollBarVisibility="{Binding (ScrollViewer.HorizontalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}" Margin="0,-2">
								<ScrollViewer.Template>
									<ControlTemplate TargetType="{x:Type ScrollViewer}">
										<ScrollContentPresenter x:Name="ScrollContentPresenter" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="0,0,1,0"/>
									</ControlTemplate>
								</ScrollViewer.Template>
								<ItemsPresenter x:Name="ItemsPresenterElement" Margin="0,2"/>
							</ScrollViewer>
							<RepeatButton x:Name="RightScrollButtonElement" Grid.Column="2" Visibility="{Binding ComputedHorizontalScrollBarVisibility, ElementName=ScrollViewerElement}">
								<RepeatButton.Style>
									<Style TargetType="{x:Type RepeatButton}">
										<Setter Property="Width" Value="17"/>
										<Setter Property="Height" Value="17"/>
										<Setter Property="Margin" Value="1"/>
										<Setter Property="IsTabStop" Value="False"/>
										<Setter Property="SnapsToDevicePixels" Value="True"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type RepeatButton}">
													<Grid x:Name="LayoutRoot">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CommonStates">
																<VisualState x:Name="Disabled">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FF8D8D8D"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Normal"/>
																<VisualState x:Name="MouseOver">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="Black"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Pressed">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="Black"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Chromes:ButtonChrome RenderNormal="False" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}">
															<telerik:StyleManager.Theme>
																<telerik:Office_BlackTheme/>
															</telerik:StyleManager.Theme>
														</Chromes:ButtonChrome>
														<Path x:Name="BackgroundIcon" Data="M1,0L1,7 2,7 2,6 3,6 3,5 4,5 4,4 5,4 5,3 4,3 4,2 3,2 3,1 2,1 2,0z" Fill="White" Height="7" Margin="0,2,0,0" Width="7"/>
														<Path x:Name="ForegroundIcon" Data="M1,0L1,7 2,7 2,6 3,6 3,5 4,5 4,4 5,4 5,3 4,3 4,2 3,2 3,1 2,1 2,0z" Fill="Black" Height="7" Margin="0,1" Width="7"/>
													</Grid>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</RepeatButton.Style>
							</RepeatButton>
							<ToggleButton x:Name="DropDownButtonElement" Grid.Column="3" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
								<telerik:RadContextMenu.ContextMenu>
									<TabControl:DropDownMenu x:Name="DropDownMenuElement" ClickToOpen="True" DisplayMemberPath="{TemplateBinding DropDownDisplayMemberPath}" ItemTemplate="{TemplateBinding ItemDropDownContentTemplate}" IconColumnWidth="0" Placement="Bottom" Style="{TemplateBinding DropDownStyle}" StaysOpen="False"/>
								</telerik:RadContextMenu.ContextMenu>
								<ToggleButton.Style>
									<Style TargetType="{x:Type ToggleButton}">
										<Setter Property="Width" Value="17"/>
										<Setter Property="Height" Value="17"/>
										<Setter Property="Margin" Value="1"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Grid>
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CommonStates">
																<VisualState x:Name="Disabled">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FF8D8D8D"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Normal"/>
																<VisualState x:Name="MouseOver">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="Black"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Pressed">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="Black"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Chromes:ButtonChrome RenderNormal="False" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderChecked="{TemplateBinding IsChecked}">
															<telerik:StyleManager.Theme>
																<telerik:Office_BlackTheme/>
															</telerik:StyleManager.Theme>
														</Chromes:ButtonChrome>
														<Path x:Name="BackgroundIcon" Data="M0,2L7,2 7,3 6,3 6,4 5,4 5,5 4,5 4,6 3,6 3,5 2,5 2,4 1,4 1,3 0,3z M0,0L7,0 7,1 0,1z" Fill="White" Height="7" Margin="0,2,0,0" Width="7"/>
														<Path x:Name="ForegroundIcon" Data="M0,2L7,2 7,3 6,3 6,4 5,4 5,5 4,5 4,6 3,6 3,5 2,5 2,4 1,4 1,3 0,3z M0,0L7,0 7,1 0,1z" Fill="Black" Height="7" Margin="0,1" Width="7"/>
													</Grid>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</ToggleButton.Style>
							</ToggleButton>
							<telerik:RadButton x:Name="CloseButton" Grid.Column="4" Command="telerik:RadDockingCommands.Close" InnerCornerRadius="0">
								<telerik:RadButton.Style>
									<Style TargetType="{x:Type telerik:RadButton}">
										<Setter Property="Width" Value="17"/>
										<Setter Property="Height" Value="17"/>
										<Setter Property="Margin" Value="1"/>
										<Setter Property="IsTabStop" Value="False"/>
										<Setter Property="SnapsToDevicePixels" Value="True"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type telerik:RadButton}">
													<Grid x:Name="LayoutRoot">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CommonStates">
																<VisualState x:Name="Disabled">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FF8D8D8D"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Normal"/>
																<VisualState x:Name="MouseOver">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="Black"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Pressed">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="Black"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Chromes:ButtonChrome RenderNormal="False" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}">
															<telerik:StyleManager.Theme>
																<telerik:Office_BlackTheme/>
															</telerik:StyleManager.Theme>
														</Chromes:ButtonChrome>
														<Path x:Name="BackgroundIcon" Data="M0,0L2,0 2,1 3,1 3,2 5,2 5,1 6,1 6,0 8,0 8,1 7,1 7,2 6,2 6,3 5,3 5,4 6,4 6,5 6,5 7,5 7,6 8,6 8,7 6,7 6,6 5,6 5,5 3,5 3,6 2,6 2,7 0,7 0,6 1,6 1,5 2,5 2,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1z" Fill="White" Height="7" Margin="0,2,0,0" Width="8"/>
														<Path x:Name="ForegroundIcon" Data="M0,0L2,0 2,1 3,1 3,2 5,2 5,1 6,1 6,0 8,0 8,1 7,1 7,2 6,2 6,3 5,3 5,4 6,4 6,5 6,5 7,5 7,6 8,6 8,7 6,7 6,6 5,6 5,5 3,5 3,6 2,6 2,7 0,7 0,6 1,6 1,5 2,5 2,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1z" Fill="Black" Height="7" Margin="0,1" Width="8"/>
													</Grid>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</telerik:RadButton.Style>
								<telerik:RadButton.Visibility>
									<Binding Path="IsEnabled" RelativeSource="{RelativeSource Self}">
										<Binding.Converter>
											<telerik:BooleanToVisibilityConverter/>
										</Binding.Converter>
									</Binding>
								</telerik:RadButton.Visibility>
							</telerik:RadButton>
						</Grid>
						<telerik:RadGridResizer x:Name="DockResizer" Cursor="SizeWE" HorizontalAlignment="Left" Stylus.IsFlicksEnabled="False" Stylus.IsPressAndHoldEnabled="False" Placement="Left" Grid.RowSpan="2" ShowsPreview="True" Visibility="Collapsed" VerticalAlignment="Stretch">
							<telerik:StyleManager.Theme>
								<telerik:Office_BlackTheme/>
							</telerik:StyleManager.Theme>
						</telerik:RadGridResizer>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="LeftTemplate">
			
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPaneGroup}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" MinHeight="20"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled"/>
								<VisualState x:Name="Normal"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="AutoCollapseStates">
								<VisualState x:Name="SingleItem">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsContainer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TwoOrMoreItems"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PaneHeaderVisibilityStates">
								<VisualState x:Name="PaneHeaderHidden">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PaneHeaderVisible"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ResizerStates">
								<VisualState x:Name="ResizerLeft">
									<Storyboard>
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DockResizer">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="DockResizer">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<System:Double>4</System:Double>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ItemsContainer">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Thickness>4,-5,0,0</Thickness>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentBackground">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Thickness>4,0,0,0</Thickness>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ResizerTop">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="VerticalAlignment" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<VerticalAlignment>Top</VerticalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="HorizontalAlignment" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<HorizontalAlignment>Stretch</HorizontalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Placement" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Dock>Top</Dock>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Double>4</System:Double>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>1</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>0</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentBackground">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,4,0,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HideResizer"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentControl x:Name="ContentBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#FFE0E0E0">
							<ContentControl.Style>
								<Style TargetType="{x:Type ContentControl}">
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type ContentControl}">
												<Border x:Name="Root" BorderBrush="{StaticResource DockPanelBGBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource DockPanelBGBrush}" CornerRadius="0">
													<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</ContentControl.Style>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>
								<Border Grid.Row="0" Visibility="{Binding SelectedItem.PaneHeaderVisibility, RelativeSource={RelativeSource TemplatedParent}}">
									<telerik:PaneHeader x:Name="HeaderElement" MinHeight="25" Grid.Row="0" SelectedPane="{TemplateBinding SelectedPane}">
										<telerik:StyleManager.Theme>
											<telerik:Office_BlackTheme/>
										</telerik:StyleManager.Theme>
									</telerik:PaneHeader>
								</Border>
								<Grid Grid.Row="1">
									<ContentPresenter x:Name="ContentElement" ContentTemplate="{TemplateBinding SelectedContentTemplate}">
										<ContentPresenter.Visibility>
											<Binding Path="IsContentPreserved" RelativeSource="{RelativeSource TemplatedParent}">
												<Binding.Converter>
													<telerik:InvertedBooleanToVisibilityConverter/>
												</Binding.Converter>
											</Binding>
										</ContentPresenter.Visibility>
									</ContentPresenter>
									<Grid x:Name="ContentElementsPanel">
										<Grid.Visibility>
											<Binding Path="IsContentPreserved" RelativeSource="{RelativeSource TemplatedParent}">
												<Binding.Converter>
													<telerik:BooleanToVisibilityConverter/>
												</Binding.Converter>
											</Binding>
										</Grid.Visibility>
									</Grid>
								</Grid>
							</Grid>
						</ContentControl>
						<Border x:Name="ItemsContainer" Margin="0,-5,0,0" Padding="0,0,1,0" Grid.Row="1">
							<ItemsPresenter x:Name="ItemsPresenterElement"/>
						</Border>
						<telerik:RadGridResizer x:Name="DockResizer" Cursor="SizeWE" HorizontalAlignment="Left" Stylus.IsFlicksEnabled="False" Stylus.IsPressAndHoldEnabled="False" Placement="Left" Grid.RowSpan="2" ShowsPreview="True" Visibility="Collapsed" VerticalAlignment="Stretch">
							<telerik:StyleManager.Theme>
								<telerik:Office_BlackTheme/>
							</telerik:StyleManager.Theme>
						</telerik:RadGridResizer>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="RightTemplate">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPaneGroup}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" MinHeight="20"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled"/>
								<VisualState x:Name="Normal"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="AutoCollapseStates">
								<VisualState x:Name="SingleItem">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsContainer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TwoOrMoreItems"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PaneHeaderVisibilityStates">
								<VisualState x:Name="PaneHeaderHidden">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PaneHeaderVisible"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ResizerStates">
								<VisualState x:Name="ResizerLeft">
									<Storyboard>
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DockResizer">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="DockResizer">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<System:Double>4</System:Double>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ItemsContainer">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Thickness>4,-5,0,0</Thickness>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentBackground">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Thickness>4,0,0,0</Thickness>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ResizerTop">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="VerticalAlignment" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<VerticalAlignment>Top</VerticalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="HorizontalAlignment" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<HorizontalAlignment>Stretch</HorizontalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Placement" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Dock>Top</Dock>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Double>4</System:Double>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>1</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>0</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentBackground">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,4,0,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HideResizer"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentControl x:Name="ContentBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
							<ContentControl.Style>
								<Style TargetType="{x:Type ContentControl}">
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type ContentControl}">
												<Border x:Name="Root" BorderBrush="{StaticResource DockPanelBGBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource DockPanelBGBrush}" CornerRadius="0">
													<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</ContentControl.Style>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>
								<Border Grid.Row="0" Visibility="{Binding SelectedItem.PaneHeaderVisibility, RelativeSource={RelativeSource TemplatedParent}}">
									<telerik:PaneHeader x:Name="HeaderElement" MinHeight="20" Grid.Row="0" SelectedPane="{TemplateBinding SelectedPane}">
										<telerik:StyleManager.Theme>
											<telerik:Office_BlackTheme/>
										</telerik:StyleManager.Theme>
									</telerik:PaneHeader>
								</Border>
								<Grid Grid.Row="1">
									<ContentPresenter x:Name="ContentElement" ContentTemplate="{TemplateBinding SelectedContentTemplate}">
										<ContentPresenter.Visibility>
											<Binding Path="IsContentPreserved" RelativeSource="{RelativeSource TemplatedParent}">
												<Binding.Converter>
													<telerik:InvertedBooleanToVisibilityConverter/>
												</Binding.Converter>
											</Binding>
										</ContentPresenter.Visibility>
									</ContentPresenter>
									<Grid x:Name="ContentElementsPanel">
										<Grid.Visibility>
											<Binding Path="IsContentPreserved" RelativeSource="{RelativeSource TemplatedParent}">
												<Binding.Converter>
													<telerik:BooleanToVisibilityConverter/>
												</Binding.Converter>
											</Binding>
										</Grid.Visibility>
									</Grid>
								</Grid>
							</Grid>
						</ContentControl>
						<Border x:Name="ItemsContainer" Margin="0,-5,0,0" Padding="0,0,1,0" Grid.Row="1">
							<ItemsPresenter x:Name="ItemsPresenterElement"/>
						</Border>
						<telerik:RadGridResizer x:Name="DockResizer" Cursor="SizeWE" HorizontalAlignment="Left" Stylus.IsFlicksEnabled="False" Stylus.IsPressAndHoldEnabled="False" Placement="Left" Grid.RowSpan="2" ShowsPreview="True" Visibility="Collapsed" VerticalAlignment="Stretch">
							<telerik:StyleManager.Theme>
								<telerik:Office_BlackTheme/>
							</telerik:StyleManager.Theme>
						</telerik:RadGridResizer>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<Primitives:TabStripPanel IsItemsHost="True"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="#1c6f93"/>
		<Setter Property="Background" Value="White"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Align" Value="Left"/>
		<Setter Property="TabStripPlacement" Value="Bottom"/>
		<Setter Property="AllTabsEqualHeight" Value="True"/>
		<Setter Property="BackgroundVisibility" Value="Visible"/>
		<Setter Property="MinWidth" Value="15"/>
		<Setter Property="MinHeight" Value="15"/>
	</Style>
	<Style  TargetType="{x:Type telerik:RadSplitContainer}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadSplitContainer}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ResizerStates">
								<VisualState x:Name="ResizerLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Width" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Double>4</System:Double>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="border">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>4,0,0,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ResizerTop">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="VerticalAlignment" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<VerticalAlignment>Top</VerticalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="HorizontalAlignment" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<HorizontalAlignment>Stretch</HorizontalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Placement" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Dock>Top</Dock>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Double>4</System:Double>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="border">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,4,0,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ResizerRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Double>4</System:Double>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="border">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,0,4,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="HorizontalAlignment" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<HorizontalAlignment>Right</HorizontalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Placement" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Dock>Right</Dock>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ResizerBottom">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="VerticalAlignment" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<VerticalAlignment>Bottom</VerticalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="HorizontalAlignment" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<HorizontalAlignment>Stretch</HorizontalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Placement" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Dock>Bottom</Dock>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="DockResizer">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Double>4</System:Double>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="border">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,0,0,4</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HideResizer"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
							<ItemsPresenter/>
						</Border>
						<telerik:RadGridResizer x:Name="DockResizer" Cursor="SizeWE" HorizontalAlignment="Left" Stylus.IsFlicksEnabled="False" Stylus.IsPressAndHoldEnabled="False" Placement="Left" ShowsPreview="True" Visibility="Collapsed" VerticalAlignment="Stretch">
							<telerik:StyleManager.Theme>
								<telerik:Office_BlackTheme/>
							</telerik:StyleManager.Theme>
						</telerik:RadGridResizer>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="MinWidth" Value="15"/>
		<Setter Property="MinHeight" Value="15"/>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<telerik:ProportionalStackPanel IsItemsHost="True"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type telerik:RadPane}">
		<Setter Property="Background" Value="#FFFFFF"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPane}">
					<Grid x:Name="wrapper">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation BeginTime="0" To="0.33" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HeaderElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PinnedStates">
								<VisualState x:Name="Unpinned">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pinned">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PlacementStates">
								<VisualState x:Name="HorizontalLeft"/>
								<VisualState x:Name="HorizontalRight"/>
								<VisualState x:Name="HorizontalTop">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,0,-1,4</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>6,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HorizontalBottom">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,4,-1,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>6,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,0,4,-1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>3,6</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>4,0,0,-1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>3,6</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalTop"/>
								<VisualState x:Name="VerticalBottom"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Chromes:ButtonChrome x:Name="ChromeUnpinned" BorderThickness="1" CornerRadius="2" RenderSelected="{TemplateBinding IsSelected}" RenderHighlighted="{TemplateBinding IsMouseOver}" Visibility="Collapsed">
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background" Value="#FFFFFF"/>
									<Setter Property="BorderBrush" Value="#FFFFFF"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0"/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<Chromes:ButtonChrome x:Name="ChromePinned" BorderThickness="1,0,1,1" CornerRadius="0" Margin="0,1,0,0" RenderSelected="{TemplateBinding IsSelected}" RenderHighlighted="{TemplateBinding IsMouseOver}" Visibility="Collapsed">
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background" Value="#FFFFFF"/>
									<Setter Property="BorderBrush" Value="#FF848484"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<Primitives:TabItemContentPresenter x:Name="HeaderElement" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="LeftTemplate">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPane}">
					<Grid x:Name="wrapper">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled1">
									<Storyboard>
										<DoubleAnimation BeginTime="0" To="0.33" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HeaderElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal1"/>
								<VisualState x:Name="MouseOver1"/>
								<VisualState x:Name="Selected1">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PinnedStates">
								<VisualState x:Name="Unpinned">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pinned">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PlacementStates">
								<VisualState x:Name="HorizontalLeft"/>
								<VisualState x:Name="HorizontalRight"/>
								<VisualState x:Name="HorizontalTop">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,0,-1,4</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>6,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HorizontalBottom">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,4,-1,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>6,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,0,4,-1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>3,6</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>4,0,0,-1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>3,6</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalTop"/>
								<VisualState x:Name="VerticalBottom"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Chromes:ButtonChrome x:Name="ChromeUnpinned" BorderThickness="1" CornerRadius="0" RenderSelected="{TemplateBinding IsSelected}" RenderHighlighted="{TemplateBinding IsMouseOver}" Visibility="Collapsed">
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background" Value="{StaticResource DockPanelBGBrush}"/>
									<Setter Property="BorderBrush" Value="{StaticResource DockPanelBGBrush}"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0">
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<Chromes:ButtonChrome x:Name="ChromePinned" BorderThickness="1,0,1,1" CornerRadius="0,0,2,2" Margin="0,1,0,0" RenderSelected="{TemplateBinding IsSelected}" RenderHighlighted="{TemplateBinding IsMouseOver}" Visibility="Collapsed">
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background" Value="{StaticResource DockPanelBGBrush}"/>
									<Setter Property="BorderBrush" Value="{StaticResource DockPanelBGBrush}"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<Primitives:TabItemContentPresenter x:Name="HeaderElement" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="TopTemplate">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPane}">
					<Grid x:Name="wrapper" Margin="0,0,-1,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled1">
									<Storyboard>
										<DoubleAnimation BeginTime="0" To="0.33" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HeaderElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal1"/>
								<VisualState x:Name="MouseOver1"/>
								<VisualState x:Name="Selected1">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="Chrome">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,-2,0,-1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Chromes:ButtonChrome x:Name="Chrome" BorderThickness="1,1,1,0" Grid.ColumnSpan="2" CornerRadius="0" Margin="0" RenderSelected="{TemplateBinding IsSelected}" RenderHighlighted="{TemplateBinding IsMouseOver}" RenderEnabled="{TemplateBinding IsEnabled}">
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background" Value="{StaticResource DockPanelBGBrush}"/>
									<Setter Property="BorderBrush" Value="{StaticResource DockPanelBGBrush}"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#F91C6F93">
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF185570"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF185570"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF185570"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF185570"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF185570"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF185570"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#F91C6F93"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#F91C6F93"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF185570"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF185570"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF185570"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF185570"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF185570"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF185570"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" BorderThickness="{TemplateBinding BorderThickness}"/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<telerik:RadButton x:Name="HeaderCloseButton" Grid.Column="1" Command="telerik:RadDockingCommands.Close" Height="16" IsBackgroundVisible="False" InnerCornerRadius="0" Margin="0,0,3,0" VerticalAlignment="Center" Width="16">
							<telerik:RadButton.Visibility>
								<Binding Path="IsEnabled" RelativeSource="{RelativeSource Self}">
									<Binding.Converter>
										<telerik:BooleanToVisibilityConverter/>
									</Binding.Converter>
								</Binding>
							</telerik:RadButton.Visibility>
							<Path x:Name="BackgroundIcon" Data="M0,0L2,0 2,1 3,1 3,2 5,2 5,1 6,1 6,0 8,0 8,1 7,1 7,2 6,2 6,3 5,3 5,4 6,4 6,5 6,5 7,5 7,6 8,6 8,7 6,7 6,6 5,6 5,5 3,5 3,6 2,6 2,7 0,7 0,6 1,6 1,5 2,5 2,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1z" Fill="Black" Height="7" Width="8"/>
						</telerik:RadButton>
						<Primitives:TabItemContentPresenter x:Name="HeaderElement" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6,3,6,2" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="RightTemplate">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPane}">
					<Grid x:Name="wrapper">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation BeginTime="0" To="0.33" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HeaderElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PinnedStates">
								<VisualState x:Name="Unpinned">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pinned">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PlacementStates">
								<VisualState x:Name="HorizontalLeft"/>
								<VisualState x:Name="HorizontalRight"/>
								<VisualState x:Name="HorizontalTop">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,0,-1,4</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>6,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HorizontalBottom">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,4,-1,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>6,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,0,4,-1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>3,6</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>4,0,0,-1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>3,6</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalTop"/>
								<VisualState x:Name="VerticalBottom"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Chromes:ButtonChrome x:Name="ChromeUnpinned" BorderThickness="1" CornerRadius="0" RenderSelected="{TemplateBinding IsSelected}" RenderHighlighted="{TemplateBinding IsMouseOver}" Visibility="Collapsed">
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background" Value="{StaticResource DockPanelBGBrush}"/>
									<Setter Property="BorderBrush" Value="{StaticResource DockPanelBGBrush}"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<Chromes:ButtonChrome x:Name="ChromePinned" BorderThickness="1,0,1,1" CornerRadius="0" Margin="0,1,0,0" RenderSelected="{TemplateBinding IsSelected}" RenderHighlighted="{TemplateBinding IsMouseOver}" Visibility="Collapsed">
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background" Value="{StaticResource DockPanelBGBrush}"/>
									<Setter Property="BorderBrush" Value="{StaticResource DockPanelBGBrush}"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<Primitives:TabItemContentPresenter x:Name="HeaderElement" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BottomTemplate">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPane}">
					<Grid x:Name="wrapper" Margin="0,4,-1,0">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled1">
									<Storyboard>
										<DoubleAnimation BeginTime="0" To="0.33" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HeaderElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal1"/>
								<VisualState x:Name="MouseOver1"/>
								<VisualState x:Name="Selected1">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PinnedStates">
								<VisualState x:Name="Unpinned">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pinned">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentBorder">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,0,0,2</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Chromes:ButtonChrome x:Name="ChromeUnpinned" BorderThickness="1" CornerRadius="0" RenderSelected="{TemplateBinding IsSelected}" RenderHighlighted="{TemplateBinding IsMouseOver}" Visibility="Collapsed">
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background" Value="{StaticResource DockPanelBGBrush}"/>
									<Setter Property="BorderBrush" Value="{StaticResource DockPanelBGBrush}"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<Chromes:ButtonChrome x:Name="ChromePinned" BorderThickness="1,0,1,1" CornerRadius="0" Margin="0,1,0,2" RenderSelected="{TemplateBinding IsSelected}" RenderHighlighted="{TemplateBinding IsMouseOver}" Visibility="Collapsed">
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background" Value="{StaticResource DockPanelBGBrush}"/>
									<Setter Property="BorderBrush" Value="{StaticResource DockPanelBGBrush}"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<Border x:Name="ContentBorder">
							<Primitives:TabItemContentPresenter x:Name="HeaderElement" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6,3" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="DocumentHostTemplate">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPane}">
					<Grid x:Name="wrapper" Margin="0,0,-1,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation BeginTime="0" To="0.33" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HeaderElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="Chrome">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,-2,0,-1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Chromes:ButtonChrome x:Name="Chrome" BorderThickness="1,1,1,0" Grid.ColumnSpan="2" CornerRadius="0" Margin="0" RenderSelected="{TemplateBinding IsSelected}" RenderHighlighted="{TemplateBinding IsMouseOver}" RenderEnabled="{TemplateBinding IsEnabled}">
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background" Value="{StaticResource DockPanelBGBrush}"/>
									<Setter Property="BorderBrush" Value="{StaticResource DockPanelBGBrush}"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<telerik:RadButton x:Name="HeaderCloseButton" Grid.Column="1" Command="telerik:RadDockingCommands.Close" Height="16" IsBackgroundVisible="False" InnerCornerRadius="0" Margin="0,0,3,0" VerticalAlignment="Center" Width="16">
							<telerik:RadButton.Visibility>
								<Binding Path="IsEnabled" RelativeSource="{RelativeSource Self}">
									<Binding.Converter>
										<telerik:BooleanToVisibilityConverter/>
									</Binding.Converter>
								</Binding>
							</telerik:RadButton.Visibility>
							<Path x:Name="BackgroundIcon" Data="M0,0L2,0 2,1 3,1 3,2 5,2 5,1 6,1 6,0 8,0 8,1 7,1 7,2 6,2 6,3 5,3 5,4 6,4 6,5 6,5 7,5 7,6 8,6 8,7 6,7 6,6 5,6 5,5 3,5 3,6 2,6 2,7 0,7 0,6 1,6 1,5 2,5 2,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1z" Fill="Black" Height="7" Width="8"/>
						</telerik:RadButton>
						<Primitives:TabItemContentPresenter x:Name="HeaderElement" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6,3,6,2" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="{StaticResource DockPanelBGBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource DockPanelBGBrush}"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="ContextMenuTemplate">
			<Setter.Value>
				<DataTemplate>
					<telerik:RadContextMenu ClickToOpen="True" InheritDataContext="False">
						<telerik:StyleManager.Theme>
							<telerik:Office_BlackTheme/>
						</telerik:StyleManager.Theme>
						<telerik:RadMenuItem CommandTarget="{Binding}" CommandParameter="{Binding}" Command="telerik:RadDockingCommands.Floating" Header="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsChecked="{Binding IsFloatingOnly}"/>
						<telerik:RadMenuItem CommandTarget="{Binding}" CommandParameter="{Binding}" Command="telerik:RadDockingCommands.Dockable" Header="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsChecked="{Binding IsDockableOptionChecked}"/>
						<telerik:RadMenuItem CommandTarget="{Binding}" CommandParameter="{Binding}" Command="telerik:RadDockingCommands.TabbedDocument" Header="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsChecked="{Binding IsInDocumentHost}"/>
						<telerik:RadMenuItem CommandTarget="{Binding}" CommandParameter="{Binding}" Command="telerik:RadDockingCommands.Pin" Header="{Binding Command.Text, RelativeSource={RelativeSource Self}}">
							<telerik:RadMenuItem.IsChecked>
								<Binding Path="IsPinned">
									<Binding.Converter>
										<telerik:InvertedBooleanConverter/>
									</Binding.Converter>
								</Binding>
							</telerik:RadMenuItem.IsChecked>
						</telerik:RadMenuItem>
						<telerik:RadMenuItem CommandTarget="{Binding}" CommandParameter="{Binding}" Command="telerik:RadDockingCommands.Close" Header="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsChecked="{Binding IsHidden}"/>
					</telerik:RadContextMenu>
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="PaneHeaderControlTemplate1" TargetType="{x:Type telerik:PaneHeader}">
		<Border x:Name="Root" >
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommandsMenuStates">
					<VisualState x:Name="CommandsMenuNormalState"/>
					<VisualState x:Name="CommandsMenuHiddenState">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HeaderDropDownMenu">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="PinnedStates">
					<VisualState x:Name="Unpinned">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HeaderUnPinButton">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HeaderPinButton">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pinned"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="HighlightStates">
					<VisualState x:Name="NotHighlighted"/>
					<VisualState x:Name="Highlighted">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="Content">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<SolidColorBrush Color="#FF154F68"/>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Grid x:Name="Content">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<ContentControl x:Name="TitleElement" ContentTemplate="{Binding SelectedPane.TitleTemplate, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding SelectedPane.Title, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0" HorizontalContentAlignment="Stretch" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
				<telerik:RadToggleButton x:Name="HeaderDropDownMenu" Grid.Column="1" CommandParameter="{Binding SelectedPane, RelativeSource={RelativeSource TemplatedParent}}" Command="telerik:RadDockingCommands.ContextMenuOpen" IsThreeState="True" InnerCornerRadius="0">
					<telerik:RadToggleButton.Style>
						<Style TargetType="{x:Type telerik:RadToggleButton}">
							<Setter Property="Width" Value="17"/>
							<Setter Property="Height" Value="17"/>
							<Setter Property="Margin" Value="0,2,2,1"/>
							<Setter Property="IsTabStop" Value="False"/>
							<Setter Property="SnapsToDevicePixels" Value="True"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
										<Grid>
											<VisualStateManager.VisualStateGroups>
												<VisualStateGroup x:Name="CommonStates">
													<VisualState x:Name="Disabled">
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<SolidColorBrush Color="#FF8D8D8D"/>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<SolidColorBrush Color="White"/>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="Normal"/>
													<VisualState x:Name="MouseOver">
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<SolidColorBrush Color="Black"/>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<SolidColorBrush Color="White"/>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="Pressed">
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<SolidColorBrush Color="Black"/>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<SolidColorBrush Color="White"/>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
												</VisualStateGroup>
											</VisualStateManager.VisualStateGroups>
											<Chromes:ButtonChrome x:Name="ButtonChrome" RenderNormal="False" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderChecked="{TemplateBinding IsChecked}">
												<telerik:StyleManager.Theme>
													<telerik:Office_BlackTheme/>
												</telerik:StyleManager.Theme>
											</Chromes:ButtonChrome>
											<Path x:Name="BackgroundIcon" Data="M0,0L7,0 7,1 6,1 6,2 5,2 5,3 4,3 4,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1z" Fill="White" Height="4" Margin="0,2,0,0" Width="7"/>
											<Path x:Name="ForegroundIcon" Data="M0,0L7,0 7,1 6,1 6,2 5,2 5,3 4,3 4,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1z" Fill="White" Height="4" Margin="0,1" Width="7"/>
										</Grid>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</telerik:RadToggleButton.Style>
				</telerik:RadToggleButton>
				<Grid Grid.Column="2" Visibility="{Binding SelectedPane.PinButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
					<telerik:RadButton x:Name="HeaderPinButton" CommandParameter="{Binding SelectedPane, RelativeSource={RelativeSource TemplatedParent}}" Command="telerik:RadDockingCommands.Pin" InnerCornerRadius="0">
						<telerik:RadButton.Style>
							<Style TargetType="{x:Type telerik:RadButton}">
								<Setter Property="Width" Value="17"/>
								<Setter Property="Height" Value="17"/>
								<Setter Property="Margin" Value="0,2,2,1"/>
								<Setter Property="IsTabStop" Value="False"/>
								<Setter Property="SnapsToDevicePixels" Value="True"/>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type telerik:RadButton}">
											<Grid>
												<VisualStateManager.VisualStateGroups>
													<VisualStateGroup x:Name="CommonStates">
														<VisualState x:Name="Disabled">
															<Storyboard>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="BackgroundIcon">
																	<DiscreteObjectKeyFrame KeyTime="0">
																		<DiscreteObjectKeyFrame.Value>
																			<SolidColorBrush Color="White"/>
																		</DiscreteObjectKeyFrame.Value>
																	</DiscreteObjectKeyFrame>
																</ObjectAnimationUsingKeyFrames>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="Normal"/>
														<VisualState x:Name="MouseOver">
															<Storyboard>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="BackgroundIcon">
																	<DiscreteObjectKeyFrame KeyTime="0">
																		<DiscreteObjectKeyFrame.Value>
																			<SolidColorBrush Color="White"/>
																		</DiscreteObjectKeyFrame.Value>
																	</DiscreteObjectKeyFrame>
																</ObjectAnimationUsingKeyFrames>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="Pressed">
															<Storyboard>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="BackgroundIcon">
																	<DiscreteObjectKeyFrame KeyTime="0">
																		<DiscreteObjectKeyFrame.Value>
																			<SolidColorBrush Color="White"/>
																		</DiscreteObjectKeyFrame.Value>
																	</DiscreteObjectKeyFrame>
																</ObjectAnimationUsingKeyFrames>
															</Storyboard>
														</VisualState>
													</VisualStateGroup>
												</VisualStateManager.VisualStateGroups>
												<Chromes:ButtonChrome RenderNormal="False" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}">
													<telerik:StyleManager.Theme>
														<telerik:Office_BlackTheme/>
													</telerik:StyleManager.Theme>
												</Chromes:ButtonChrome>
												<Path x:Name="BackgroundIcon" Data="M0,6.5L7,6.5 M1.5,6.5L1.5,1.5 2.5,0.5 4.5,0.5 5.5,1.5 5.5,6.5 M3.5,6.5L3.5,10 M4.5,6.5L4.5,0.5" Height="10" Margin="0,2,0,0" Stroke="White" StrokeThickness="1" Width="7"/>
												<Path x:Name="ForegroundIcon" Data="M0,6.5L7,6.5 M1.5,6.5L1.5,1.5 2.5,0.5 4.5,0.5 5.5,1.5 5.5,6.5 M3.5,6.5L3.5,10 M4.5,6.5L4.5,0.5" Height="10" Margin="0,1" StrokeThickness="1" Width="7" Stroke="White"/>
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</telerik:RadButton.Style>
					</telerik:RadButton>
					<telerik:RadButton x:Name="HeaderUnPinButton" CommandParameter="{Binding SelectedPane, RelativeSource={RelativeSource TemplatedParent}}" Command="telerik:RadDockingCommands.Pin" InnerCornerRadius="0" Visibility="Collapsed">
						<telerik:RadButton.Style>
							<Style TargetType="{x:Type telerik:RadButton}">
								<Setter Property="Width" Value="17"/>
								<Setter Property="Height" Value="17"/>
								<Setter Property="Margin" Value="0,2,2,1"/>
								<Setter Property="IsTabStop" Value="False"/>
								<Setter Property="SnapsToDevicePixels" Value="True"/>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type telerik:RadButton}">
											<Grid>
												<VisualStateManager.VisualStateGroups>
													<VisualStateGroup x:Name="CommonStates">
														<VisualState x:Name="Disabled"/>
														<VisualState x:Name="Normal"/>
														<VisualState x:Name="MouseOver"/>
														<VisualState x:Name="Pressed"/>
													</VisualStateGroup>
												</VisualStateManager.VisualStateGroups>
												<Chromes:ButtonChrome RenderNormal="False" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}">
													<telerik:StyleManager.Theme>
														<telerik:Office_BlackTheme/>
													</telerik:StyleManager.Theme>
												</Chromes:ButtonChrome>
												<Path x:Name="BackgroundIcon" Data="M3.5,0L3.5,7 M3.5,1.5L8.5,1.5 9.5,2.5 9.5,4.5 8.5,5.5 3.5,5.5 M3.5,3.5L0,3.5 M3.5,4.5L9.5,4.5" Height="7" Margin="0,2,0,0" StrokeThickness="1" Width="10" Fill="White"/>
												<Path x:Name="ForegroundIcon" Data="M3.5,0L3.5,7 M3.5,1.5L8.5,1.5 9.5,2.5 9.5,4.5 8.5,5.5 3.5,5.5 M3.5,3.5L0,3.5 M3.5,4.5L9.5,4.5" Height="7" Margin="0,1" StrokeThickness="1" Width="10" Fill="White"/>
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</telerik:RadButton.Style>
					</telerik:RadButton>
				</Grid>
				<telerik:RadButton x:Name="HeaderCloseButton" Grid.Column="3" CommandParameter="{Binding SelectedPane, RelativeSource={RelativeSource TemplatedParent}}" Command="telerik:RadDockingCommands.Close" InnerCornerRadius="0">
					<telerik:RadButton.Style>
						<Style TargetType="{x:Type telerik:RadButton}">
							<Setter Property="Width" Value="17"/>
							<Setter Property="Height" Value="17"/>
							<Setter Property="Margin" Value="0,2,2,1"/>
							<Setter Property="IsTabStop" Value="False"/>
							<Setter Property="SnapsToDevicePixels" Value="True"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type telerik:RadButton}">
										<Grid x:Name="LayoutRoot">
											<VisualStateManager.VisualStateGroups>
												<VisualStateGroup x:Name="CommonStates">
													<VisualState x:Name="Disabled">
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<SolidColorBrush Color="#FF8D8D8D"/>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<SolidColorBrush Color="White"/>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="Normal"/>
													<VisualState x:Name="MouseOver">
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<SolidColorBrush Color="Black"/>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<SolidColorBrush Color="White"/>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="Pressed">
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<SolidColorBrush Color="Black"/>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<SolidColorBrush Color="White"/>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
												</VisualStateGroup>
											</VisualStateManager.VisualStateGroups>
											<Chromes:ButtonChrome RenderNormal="False" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}">
												<telerik:StyleManager.Theme>
													<telerik:Office_BlackTheme/>
												</telerik:StyleManager.Theme>
											</Chromes:ButtonChrome>
											<Path x:Name="BackgroundIcon" Data="M0,0L2,0 2,1 3,1 3,2 5,2 5,1 6,1 6,0 8,0 8,1 7,1 7,2 6,2 6,3 5,3 5,4 6,4 6,5 6,5 7,5 7,6 8,6 8,7 6,7 6,6 5,6 5,5 3,5 3,6 2,6 2,7 0,7 0,6 1,6 1,5 2,5 2,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1z" Fill="White" Height="7" Margin="0,2,0,0" Width="8"/>
											<Path x:Name="ForegroundIcon" Data="M0,0L2,0 2,1 3,1 3,2 5,2 5,1 6,1 6,0 8,0 8,1 7,1 7,2 6,2 6,3 5,3 5,4 6,4 6,5 6,5 7,5 7,6 8,6 8,7 6,7 6,6 5,6 5,5 3,5 3,6 2,6 2,7 0,7 0,6 1,6 1,5 2,5 2,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1z" Fill="White" Height="7" Margin="0,1" Width="8"/>
										</Grid>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</telerik:RadButton.Style>
				</telerik:RadButton>
			</Grid>
		</Border>
	</ControlTemplate>
	<Style TargetType="{x:Type telerik:RadDocking}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="VisualCueStyle">
			<Setter.Value>
				<Style TargetType="{x:Type telerik:VisualCue}">
					<Setter Property="Background" Value="#FFFFFF"/>
					<Setter Property="BorderBrush" Value="#FFFFFF"/>
					<Setter Property="BorderThickness" Value="0"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type telerik:VisualCue}">
								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="#FFFFFF"/>
		<Setter Property="BorderBrush" Value="#FFFFFF"/>
		<Setter Property="CompassStyle">
			<Setter.Value>
				<Style TargetType="{x:Type telerik:Compass}">
					<Setter Property="Width" Value="105"/>
					<Setter Property="Height" Value="105"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type telerik:Compass}">
								<Border x:Name="VisualRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal"/>
											<VisualState x:Name="HighlightLeftIndicator">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RenderHighlighted" Storyboard.TargetName="PART_LeftIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>True</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="HighlightTopIndicator">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RenderHighlighted" Storyboard.TargetName="PART_TopIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>True</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="HighlightRightIndicator">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RenderHighlighted" Storyboard.TargetName="PART_RightIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>True</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="HighlightBottomIndicator">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RenderHighlighted" Storyboard.TargetName="PART_BottomIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>True</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="HighlightCenterIndicator">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RenderHighlighted" Storyboard.TargetName="PART_CenterIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>True</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="LeftIndicatorVisibilityStates">
											<VisualState x:Name="LeftIndicatorVisibile"/>
											<VisualState x:Name="LeftIndicatorHidden">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_LeftIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Collapsed</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="TopIndicatorVisibilityStates">
											<VisualState x:Name="TopIndicatorVisibile"/>
											<VisualState x:Name="TopIndicatorHidden">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_TopIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Collapsed</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="RightIndicatorVisibilityStates">
											<VisualState x:Name="RightIndicatorVisibile"/>
											<VisualState x:Name="RightIndicatorHidden">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_RightIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Collapsed</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="BottomIndicatorVisibilityStates">
											<VisualState x:Name="BottomIndicatorVisibile"/>
											<VisualState x:Name="BottomIndicatorHidden">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_BottomIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Collapsed</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="CenterIndicatorVisibilityStates">
											<VisualState x:Name="CenterIndicatorVisibile"/>
											<VisualState x:Name="CenterIndicatorHidden">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_CenterIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Collapsed</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Grid x:Name="Visual" HorizontalAlignment="Center" Height="80" VerticalAlignment="Center" Width="80">
										<Chromes:ButtonChrome x:Name="PART_LeftIndicator" CornerRadius="2,1,1,2" HorizontalAlignment="Left" Height="26" Width="20">
											<Chromes:ButtonChrome.Style>
												<Style TargetType="{x:Type Chromes:ButtonChrome}">
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
																<Grid>
																	<Chromes:ButtonChrome RenderMouseOver="{TemplateBinding RenderHighlighted}">
																		<telerik:StyleManager.Theme>
																			<telerik:Office_BlackTheme/>
																		</telerik:StyleManager.Theme>
																	</Chromes:ButtonChrome>
																	<Path Data="M4,0L4,7 3,7 3,6 2,6 2,5 1,5 1,4 0,4 0,3 1,3 1,2 2,2 2,1 3,1 3,0z" Fill="White" Height="7" Margin="0,1" Width="4"/>
																	<Path Data="M4,0L4,7 3,7 3,6 2,6 2,5 1,5 1,4 0,4 0,3 1,3 1,2 2,2 2,1 3,1 3,0z" Fill="Black" Height="7" Margin="0,0,0,2" Width="4"/>
																</Grid>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Chromes:ButtonChrome.Style>
										</Chromes:ButtonChrome>
										<Chromes:ButtonChrome x:Name="PART_TopIndicator" CornerRadius="2,2,1,1" Height="20" VerticalAlignment="Top" Width="26">
											<Chromes:ButtonChrome.Style>
												<Style TargetType="{x:Type Chromes:ButtonChrome}">
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
																<Grid>
																	<Chromes:ButtonChrome RenderMouseOver="{TemplateBinding RenderHighlighted}">
																		<telerik:StyleManager.Theme>
																			<telerik:Office_BlackTheme/>
																		</telerik:StyleManager.Theme>
																	</Chromes:ButtonChrome>
																	<Path Data="M0,4L7,4 7,3 6,3 6,2 5,2 5,1 4,1 4,0 3,0 3,1 2,1 2,2 1,2 1,3 0,3z" Fill="White" Height="4" Margin="0,1" Width="7"/>
																	<Path Data="M0,4L7,4 7,3 6,3 6,2 5,2 5,1 4,1 4,0 3,0 3,1 2,1 2,2 1,2 1,3 0,3z" Fill="Black" Height="4" Margin="0,0,0,2" Width="7"/>
																</Grid>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Chromes:ButtonChrome.Style>
										</Chromes:ButtonChrome>
										<Chromes:ButtonChrome x:Name="PART_RightIndicator" CornerRadius="1,2,2,1" HorizontalAlignment="Right" Height="26" Width="20">
											<Chromes:ButtonChrome.Style>
												<Style TargetType="{x:Type Chromes:ButtonChrome}">
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
																<Grid>
																	<Chromes:ButtonChrome RenderMouseOver="{TemplateBinding RenderHighlighted}">
																		<telerik:StyleManager.Theme>
																			<telerik:Office_BlackTheme/>
																		</telerik:StyleManager.Theme>
																	</Chromes:ButtonChrome>
																	<Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="White" Height="7" Margin="0,1" Width="4"/>
																	<Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 4,3 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="Black" Height="7" Margin="0,0,0,2" Width="4"/>
																</Grid>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Chromes:ButtonChrome.Style>
										</Chromes:ButtonChrome>
										<Chromes:ButtonChrome x:Name="PART_BottomIndicator" CornerRadius="1,1,2,2" Height="20" VerticalAlignment="Bottom" Width="26">
											<Chromes:ButtonChrome.Style>
												<Style TargetType="{x:Type Chromes:ButtonChrome}">
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
																<Grid>
																	<Chromes:ButtonChrome RenderMouseOver="{TemplateBinding RenderHighlighted}">
																		<telerik:StyleManager.Theme>
																			<telerik:Office_BlackTheme/>
																		</telerik:StyleManager.Theme>
																	</Chromes:ButtonChrome>
																	<Path Data="M0,0L7,0 7,1 6,1 6,2 5,2 5,3 4,3 4,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1z" Fill="White" Height="4" Margin="0,1" Width="7"/>
																	<Path Data="M0,0L7,0 7,1 6,1 6,2 5,2 5,3 4,3 4,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1z" Fill="Black" Height="4" Margin="0,0,0,2" Width="7"/>
																</Grid>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Chromes:ButtonChrome.Style>
										</Chromes:ButtonChrome>
										<Chromes:ButtonChrome x:Name="PART_CenterIndicator" CornerRadius="0" Height="32" Width="32">
											<Chromes:ButtonChrome.Style>
												<Style TargetType="{x:Type Chromes:ButtonChrome}">
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
																<Chromes:ButtonChrome RenderMouseOver="{TemplateBinding RenderHighlighted}">
																	<telerik:StyleManager.Theme>
																		<telerik:Office_BlackTheme/>
																	</telerik:StyleManager.Theme>
																</Chromes:ButtonChrome>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Chromes:ButtonChrome.Style>
										</Chromes:ButtonChrome>
									</Grid>
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="RootCompassStyle">
			<Setter.Value>
				<Style TargetType="{x:Type telerik:RootCompass}">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type telerik:Compass}">
								<Border x:Name="VisualRoot" >
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal"/>
											<VisualState x:Name="HighlightLeftIndicator">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RenderHighlighted" Storyboard.TargetName="PART_LeftIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>True</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="HighlightTopIndicator">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RenderHighlighted" Storyboard.TargetName="PART_TopIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>True</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="HighlightRightIndicator">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RenderHighlighted" Storyboard.TargetName="PART_RightIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>True</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="HighlightBottomIndicator">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RenderHighlighted" Storyboard.TargetName="PART_BottomIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>True</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="LeftIndicatorVisibilityStates">
											<VisualState x:Name="LeftIndicatorVisibile"/>
											<VisualState x:Name="LeftIndicatorHidden">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_LeftIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Collapsed</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="TopIndicatorVisibilityStates">
											<VisualState x:Name="TopIndicatorVisibile"/>
											<VisualState x:Name="TopIndicatorHidden">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_TopIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Collapsed</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="RightIndicatorVisibilityStates">
											<VisualState x:Name="RightIndicatorVisibile"/>
											<VisualState x:Name="RightIndicatorHidden">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_RightIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Collapsed</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="BottomIndicatorVisibilityStates">
											<VisualState x:Name="BottomIndicatorVisibile"/>
											<VisualState x:Name="BottomIndicatorHidden">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_BottomIndicator">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Collapsed</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Grid x:Name="Visual">
										<Chromes:ButtonChrome x:Name="PART_LeftIndicator" CornerRadius="0" HorizontalAlignment="Left" Height="26" Margin="3" Width="20">
											<Chromes:ButtonChrome.Style>
												<Style TargetType="{x:Type Chromes:ButtonChrome}">
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
																<Grid>
																	<Chromes:ButtonChrome RenderMouseOver="{TemplateBinding RenderHighlighted}">
																		<telerik:StyleManager.Theme>
																			<telerik:Office_BlackTheme/>
																		</telerik:StyleManager.Theme>
																	</Chromes:ButtonChrome>
																	<Path Data="M4,0L4,7 3,7 3,6 2,6 2,5 1,5 1,4 0,4 0,3 1,3 1,2 2,2 2,1 3,1 3,0z" Fill="White" Height="7" Margin="0,1" Width="4"/>
																	<Path Data="M4,0L4,7 3,7 3,6 2,6 2,5 1,5 1,4 0,4 0,3 1,3 1,2 2,2 2,1 3,1 3,0z" Fill="Black" Height="7" Margin="0,0,0,2" Width="4"/>
																</Grid>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Chromes:ButtonChrome.Style>
										</Chromes:ButtonChrome>
										<Chromes:ButtonChrome x:Name="PART_TopIndicator" CornerRadius="0" Height="20" Margin="3" VerticalAlignment="Top" Width="26">
											<Chromes:ButtonChrome.Style>
												<Style TargetType="{x:Type Chromes:ButtonChrome}">
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
																<Grid>
																	<Chromes:ButtonChrome RenderMouseOver="{TemplateBinding RenderHighlighted}">
																		<telerik:StyleManager.Theme>
																			<telerik:Office_BlackTheme/>
																		</telerik:StyleManager.Theme>
																	</Chromes:ButtonChrome>
																	<Path Data="M0,4L7,4 7,3 6,3 6,2 5,2 5,1 4,1 4,0 3,0 3,1 2,1 2,2 1,2 1,3 0,3z" Fill="White" Height="4" Margin="0,1" Width="7"/>
																	<Path Data="M0,4L7,4 7,3 6,3 6,2 5,2 5,1 4,1 4,0 3,0 3,1 2,1 2,2 1,2 1,3 0,3z" Fill="Black" Height="4" Margin="0,0,0,2" Width="7"/>
																</Grid>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Chromes:ButtonChrome.Style>
										</Chromes:ButtonChrome>
										<Chromes:ButtonChrome x:Name="PART_RightIndicator" CornerRadius="0" HorizontalAlignment="Right" Height="26" Margin="3" Width="20">
											<Chromes:ButtonChrome.Style>
												<Style TargetType="{x:Type Chromes:ButtonChrome}">
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
																<Grid>
																	<Chromes:ButtonChrome RenderMouseOver="{TemplateBinding RenderHighlighted}">
																		<telerik:StyleManager.Theme>
																			<telerik:Office_BlackTheme/>
																		</telerik:StyleManager.Theme>
																	</Chromes:ButtonChrome>
																	<Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="White" Height="7" Margin="0,1" Width="4"/>
																	<Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 4,3 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="Black" Height="7" Margin="0,0,0,2" Width="4"/>
																</Grid>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Chromes:ButtonChrome.Style>
										</Chromes:ButtonChrome>
										<Chromes:ButtonChrome x:Name="PART_BottomIndicator" CornerRadius="0" Height="20" Margin="3" VerticalAlignment="Bottom" Width="26">
											<Chromes:ButtonChrome.Style>
												<Style TargetType="{x:Type Chromes:ButtonChrome}">
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
																<Grid>
																	<Chromes:ButtonChrome RenderMouseOver="{TemplateBinding RenderHighlighted}">
																		<telerik:StyleManager.Theme>
																			<telerik:Office_BlackTheme/>
																		</telerik:StyleManager.Theme>
																	</Chromes:ButtonChrome>
																	<Path Data="M0,0L7,0 7,1 6,1 6,2 5,2 5,3 4,3 4,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1z" Fill="White" Height="4" Margin="0,1" Width="7"/>
																	<Path Data="M0,0L7,0 7,1 6,1 6,2 5,2 5,3 4,3 4,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1z" Fill="Black" Height="4" Margin="0,0,0,2" Width="7"/>
																</Grid>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Chromes:ButtonChrome.Style>
										</Chromes:ButtonChrome>
									</Grid>
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadDocking}">
					<Grid x:Name="Root">
						<Border x:Name="Border" BorderThickness="0" Padding="0">
							<DockPanel x:Name="RootDockPanel">
								<telerik:AutoHideArea x:Name="LeftAutoHide" BackgroundVisibility="Collapsed" DockPanel.Dock="Left" IsDefaultItemSelected="True" SupressSelectedContentTemplateReapplying="False" TabOrientation="Vertical" TabStripPlacement="Left">
									<telerik:StyleManager.Theme>
										<telerik:Office_BlackTheme/>
									</telerik:StyleManager.Theme>
									<telerik:AutoHideArea.Template>
										<ControlTemplate TargetType="{x:Type telerik:AutoHideArea}">
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto"/>
													<ColumnDefinition Width="*"/>
												</Grid.ColumnDefinitions>
												<ItemsPresenter x:Name="ItemsPresenterElement"/>
												<Popup x:Name="ContentPopup" AllowsTransparency="True" Grid.Column="1" IsOpen="False" Placement="Right">
													<Grid>
														<Grid x:Name="PopupChild" MinWidth="50" MinHeight="50">
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="*"/>
																<ColumnDefinition Width="Auto"/>
															</Grid.ColumnDefinitions>
															<ContentControl x:Name="ContentBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0">
																<ContentControl.Style>
																	<Style TargetType="{x:Type ContentControl}">
																		<Setter Property="Template">
																			<Setter.Value>
																				<ControlTemplate TargetType="{x:Type ContentControl}">
																					<Border x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2,2,2,0">
																						<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
																					</Border>
																				</ControlTemplate>
																			</Setter.Value>
																		</Setter>
																	</Style>
																</ContentControl.Style>
																<Grid>
																	<Grid.RowDefinitions>
																		<RowDefinition Height="Auto"/>
																		<RowDefinition Height="*"/>
																	</Grid.RowDefinitions>
																	<telerik:PaneHeader x:Name="HeaderElement" MinHeight="16" Grid.Row="0" SelectedPane="{TemplateBinding SelectedPane}" Visibility="{Binding SelectedPane.PaneHeaderVisibility, RelativeSource={RelativeSource TemplatedParent}}">
																		<telerik:StyleManager.Theme>
																			<telerik:Office_BlackTheme/>
																		</telerik:StyleManager.Theme>
																	</telerik:PaneHeader>
																	<ContentPresenter x:Name="ContentElement" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Grid.Row="1"/>
																</Grid>
															</ContentControl>
															<telerik:RadGridResizer x:Name="Resizer" Background="#01010101" Cursor="SizeWE" Grid.Column="1" HorizontalAlignment="Right" Stylus.IsFlicksEnabled="False" Stylus.IsPressAndHoldEnabled="False" Placement="Right" VerticalAlignment="Stretch" Width="4">
																<telerik:StyleManager.Theme>
																	<telerik:Office_BlackTheme/>
																</telerik:StyleManager.Theme>
															</telerik:RadGridResizer>
														</Grid>
													</Grid>
												</Popup>
											</Grid>
										</ControlTemplate>
									</telerik:AutoHideArea.Template>
								</telerik:AutoHideArea>
								<telerik:AutoHideArea x:Name="RightAutoHide" BackgroundVisibility="Collapsed" DockPanel.Dock="Right" IsDefaultItemSelected="True" SupressSelectedContentTemplateReapplying="False" TabOrientation="Vertical" TabStripPlacement="Right">
									<telerik:StyleManager.Theme>
										<telerik:Office_BlackTheme/>
									</telerik:StyleManager.Theme>
									<telerik:AutoHideArea.Template>
										<ControlTemplate TargetType="{x:Type telerik:AutoHideArea}">
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="*"/>
													<ColumnDefinition Width="Auto"/>
												</Grid.ColumnDefinitions>
												<ItemsPresenter x:Name="ItemsPresenterElement" Grid.Column="1"/>
												<Popup x:Name="ContentPopup" AllowsTransparency="True" IsOpen="False" Placement="Left">
													<Grid>
														<Grid x:Name="PopupChild" MinWidth="50" MinHeight="50">
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="Auto"/>
																<ColumnDefinition Width="*"/>
															</Grid.ColumnDefinitions>
															<ContentControl x:Name="ContentBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1">
																<ContentControl.Style>
																	<Style TargetType="{x:Type ContentControl}">
																		<Setter Property="Template">
																			<Setter.Value>
																				<ControlTemplate TargetType="{x:Type ContentControl}">
																					<Border x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2,2,2,0">
																						<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
																					</Border>
																				</ControlTemplate>
																			</Setter.Value>
																		</Setter>
																	</Style>
																</ContentControl.Style>
																<Grid>
																	<Grid.RowDefinitions>
																		<RowDefinition Height="Auto"/>
																		<RowDefinition Height="*"/>
																	</Grid.RowDefinitions>
																	<telerik:PaneHeader x:Name="HeaderElement" MinHeight="16" Grid.Row="0" SelectedPane="{TemplateBinding SelectedPane}" Visibility="{Binding SelectedPane.PaneHeaderVisibility, RelativeSource={RelativeSource TemplatedParent}}">
																		<telerik:StyleManager.Theme>
																			<telerik:Office_BlackTheme/>
																		</telerik:StyleManager.Theme>
																	</telerik:PaneHeader>
																	<ContentPresenter x:Name="ContentElement" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Grid.Row="1"/>
																</Grid>
															</ContentControl>
															<telerik:RadGridResizer x:Name="Resizer" Background="#01010101" Cursor="SizeWE" Grid.Column="0" HorizontalAlignment="Left" Stylus.IsFlicksEnabled="False" Stylus.IsPressAndHoldEnabled="False" Placement="Left" VerticalAlignment="Stretch" Width="4">
																<telerik:StyleManager.Theme>
																	<telerik:Office_BlackTheme/>
																</telerik:StyleManager.Theme>
															</telerik:RadGridResizer>
														</Grid>
													</Grid>
												</Popup>
											</Grid>
										</ControlTemplate>
									</telerik:AutoHideArea.Template>
								</telerik:AutoHideArea>
								<telerik:AutoHideArea x:Name="TopAutoHide" BackgroundVisibility="Collapsed" DockPanel.Dock="Top" IsDefaultItemSelected="True" SupressSelectedContentTemplateReapplying="False" TabStripPlacement="Top">
									<telerik:StyleManager.Theme>
										<telerik:Office_BlackTheme/>
									</telerik:StyleManager.Theme>
									<telerik:AutoHideArea.Template>
										<ControlTemplate TargetType="{x:Type telerik:AutoHideArea}">
											<Grid>
												<Grid.RowDefinitions>
													<RowDefinition Height="Auto"/>
													<RowDefinition Height="*"/>
												</Grid.RowDefinitions>
												<ItemsPresenter x:Name="ItemsPresenterElement" Grid.Row="0"/>
												<Popup x:Name="ContentPopup" AllowsTransparency="True" IsOpen="False" Grid.Row="1">
													<Grid>
														<Grid x:Name="PopupChild" MinWidth="50" MinHeight="50">
															<Grid.RowDefinitions>
																<RowDefinition Height="*"/>
																<RowDefinition Height="Auto"/>
															</Grid.RowDefinitions>
															<ContentControl x:Name="ContentBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="0">
																<ContentControl.Style>
																	<Style TargetType="{x:Type ContentControl}">
																		<Setter Property="Template">
																			<Setter.Value>
																				<ControlTemplate TargetType="{x:Type ContentControl}">
																					<Border x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2,2,2,0">
																						<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
																					</Border>
																				</ControlTemplate>
																			</Setter.Value>
																		</Setter>
																	</Style>
																</ContentControl.Style>
																<Grid>
																	<Grid.RowDefinitions>
																		<RowDefinition Height="Auto"/>
																		<RowDefinition Height="*"/>
																	</Grid.RowDefinitions>
																	<telerik:PaneHeader x:Name="HeaderElement" MinHeight="16" Grid.Row="0" SelectedPane="{TemplateBinding SelectedPane}" Visibility="{Binding SelectedPane.PaneHeaderVisibility, RelativeSource={RelativeSource TemplatedParent}}">
																		<telerik:StyleManager.Theme>
																			<telerik:Office_BlackTheme/>
																		</telerik:StyleManager.Theme>
																	</telerik:PaneHeader>
																	<ContentPresenter x:Name="ContentElement" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Grid.Row="1"/>
																</Grid>
															</ContentControl>
															<telerik:RadGridResizer x:Name="Resizer" Background="#01010101" Cursor="SizeNS" HorizontalAlignment="Stretch" Height="4" Stylus.IsFlicksEnabled="False" Stylus.IsPressAndHoldEnabled="False" Placement="Bottom" Grid.Row="1" VerticalAlignment="Bottom">
																<telerik:StyleManager.Theme>
																	<telerik:Office_BlackTheme/>
																</telerik:StyleManager.Theme>
															</telerik:RadGridResizer>
														</Grid>
													</Grid>
												</Popup>
											</Grid>
										</ControlTemplate>
									</telerik:AutoHideArea.Template>
								</telerik:AutoHideArea>
								<telerik:AutoHideArea x:Name="BottomAutoHide" BackgroundVisibility="Collapsed" DockPanel.Dock="Bottom" IsDefaultItemSelected="True" SupressSelectedContentTemplateReapplying="False" TabStripPlacement="Bottom">
									<telerik:StyleManager.Theme>
										<telerik:Office_BlackTheme/>
									</telerik:StyleManager.Theme>
									<telerik:AutoHideArea.Template>
										<ControlTemplate TargetType="{x:Type telerik:AutoHideArea}">
											<Grid>
												<Grid.RowDefinitions>
													<RowDefinition Height="*"/>
													<RowDefinition Height="Auto"/>
												</Grid.RowDefinitions>
												<ItemsPresenter x:Name="ItemsPresenterElement" Grid.Row="1"/>
												<Popup x:Name="ContentPopup" AllowsTransparency="True" IsOpen="False" Placement="Top">
													<Grid>
														<Grid x:Name="PopupChild" MinWidth="50" MinHeight="50">
															<Grid.RowDefinitions>
																<RowDefinition Height="Auto"/>
																<RowDefinition Height="*"/>
															</Grid.RowDefinitions>
															<telerik:RadGridResizer x:Name="Resizer" Background="#01010101" Cursor="SizeNS" HorizontalAlignment="Stretch" Height="4" Stylus.IsFlicksEnabled="False" Stylus.IsPressAndHoldEnabled="False" Placement="Top" Grid.Row="0" VerticalAlignment="Top">
																<telerik:StyleManager.Theme>
																	<telerik:Office_BlackTheme/>
																</telerik:StyleManager.Theme>
															</telerik:RadGridResizer>
															<ContentControl x:Name="ContentBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1">
																<ContentControl.Style>
																	<Style TargetType="{x:Type ContentControl}">
																		<Setter Property="Template">
																			<Setter.Value>
																				<ControlTemplate TargetType="{x:Type ContentControl}">
																					<Border x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2,2,2,0">
																						<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
																					</Border>
																				</ControlTemplate>
																			</Setter.Value>
																		</Setter>
																	</Style>
																</ContentControl.Style>
																<Grid>
																	<Grid.RowDefinitions>
																		<RowDefinition Height="Auto"/>
																		<RowDefinition Height="*"/>
																	</Grid.RowDefinitions>
																	<telerik:PaneHeader x:Name="HeaderElement" MinHeight="16" Grid.Row="0" SelectedPane="{TemplateBinding SelectedPane}" Visibility="{Binding SelectedPane.PaneHeaderVisibility, RelativeSource={RelativeSource TemplatedParent}}">
																		<telerik:StyleManager.Theme>
																			<telerik:Office_BlackTheme/>
																		</telerik:StyleManager.Theme>
																	</telerik:PaneHeader>
																	<ContentPresenter x:Name="ContentElement" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Grid.Row="1"/>
																</Grid>
															</ContentControl>
														</Grid>
													</Grid>
												</Popup>
											</Grid>
										</ControlTemplate>
									</telerik:AutoHideArea.Template>
								</telerik:AutoHideArea>
								<telerik:DockingPanel x:Name="ContentDockPanel" Margin="0" Background="#FFE0E0E0">
									<telerik:DocumentHost x:Name="DocumentHost"   Background="#FFE0E0E0" BorderThickness="0" Margin="0" />
								</telerik:DockingPanel>
							</DockPanel>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="telerik:AnimationManager.AnimationSelector">
			<Setter.Value>
				<telerik:AnimationSelector>
					<telerik:AnimationGroup AnimationName="Move" SpeedRatio="0">
						<telerik:MoveAnimation AnimationName="{x:Null}" Easing="{x:Null}" SpeedRatio="0" TargetElementName="{x:Null}"/>
						<telerik:ResizeAnimation AnimationName="{x:Null}" Easing="{x:Null}" SpeedRatio="0" TargetElementName="{x:Null}"/>
						<telerik:FadeAnimation AnimationName="{x:Null}" Direction="In" Easing="{x:Null}" MaxOpacity="1" MinOpacity="0" SpeedRatio="0" TargetElementName="{x:Null}"/>
						<telerik:ScaleAnimation AnimationName="{x:Null}" Direction="In" Easing="{x:Null}" MaxScale="1" MinScale="0.7" SpeedRatio="0" TargetElementName="{x:Null}"/>
					</telerik:AnimationGroup>
					<telerik:AnimationGroup AnimationName="Show" SpeedRatio="0">
						<telerik:FadeAnimation AnimationName="{x:Null}" Direction="In" Easing="{x:Null}" MaxOpacity="1" MinOpacity="0" SpeedRatio="0" TargetElementName="{x:Null}"/>
						<telerik:ScaleAnimation AnimationName="{x:Null}" Direction="In" Easing="{x:Null}" MaxScale="1" MinScale="0.95" SpeedRatio="0" TargetElementName="{x:Null}"/>
					</telerik:AnimationGroup>
					<telerik:AnimationGroup AnimationName="Hide" SpeedRatio="0.7">
						<telerik:FadeAnimation AnimationName="{x:Null}" Direction="Out" Easing="{x:Null}" MaxOpacity="1" MinOpacity="0" SpeedRatio="0" TargetElementName="{x:Null}"/>
						<telerik:ScaleAnimation AnimationName="{x:Null}" Direction="Out" Easing="{x:Null}" MaxScale="1" MinScale="0.7" SpeedRatio="0" TargetElementName="{x:Null}"/>
					</telerik:AnimationGroup>
					<telerik:AnimationGroup AnimationName="LeftIn" SpeedRatio="0">
						<telerik:SlideAnimation AnimationName="{x:Null}" Direction="In" Duration="0:0:0.36" Easing="{x:Null}" Orientation="Horizontal" PixelsToAnimate="NaN" SlideMode="Top" SpeedRatio="0" TargetElementName="PopupChild"/>
					</telerik:AnimationGroup>
					<telerik:AnimationGroup AnimationName="LeftOut" SpeedRatio="0">
						<telerik:SlideAnimation AnimationName="{x:Null}" Direction="Out" Duration="0:0:0.4" Easing="{x:Null}" Orientation="Horizontal" PixelsToAnimate="NaN" SlideMode="Top" SpeedRatio="0" TargetElementName="PopupChild"/>
					</telerik:AnimationGroup>
					<telerik:AnimationGroup AnimationName="TopIn" SpeedRatio="0">
						<telerik:SlideAnimation AnimationName="{x:Null}" Direction="In" Duration="0:0:0.36" Easing="{x:Null}" Orientation="Vertical" PixelsToAnimate="NaN" SlideMode="Top" SpeedRatio="0" TargetElementName="PopupChild"/>
					</telerik:AnimationGroup>
					<telerik:AnimationGroup AnimationName="TopOut" SpeedRatio="0">
						<telerik:SlideAnimation AnimationName="{x:Null}" Direction="Out" Duration="0:0:0.4" Easing="{x:Null}" Orientation="Vertical" PixelsToAnimate="NaN" SlideMode="Top" SpeedRatio="0" TargetElementName="PopupChild"/>
					</telerik:AnimationGroup>
					<telerik:AnimationGroup AnimationName="RightIn" SpeedRatio="0">
						<telerik:SlideAnimation AnimationName="{x:Null}" Direction="In" Duration="0:0:0.36" Easing="{x:Null}" Orientation="Horizontal" PixelsToAnimate="NaN" SlideMode="Bottom" SpeedRatio="0" TargetElementName="PopupChild"/>
					</telerik:AnimationGroup>
					<telerik:AnimationGroup AnimationName="RightOut" SpeedRatio="0">
						<telerik:SlideAnimation AnimationName="{x:Null}" Direction="Out" Duration="0:0:0.4" Easing="{x:Null}" Orientation="Horizontal" PixelsToAnimate="NaN" SlideMode="Bottom" SpeedRatio="0" TargetElementName="PopupChild"/>
					</telerik:AnimationGroup>
					<telerik:AnimationGroup AnimationName="BottomIn" SpeedRatio="0">
						<telerik:SlideAnimation AnimationName="{x:Null}" Direction="In" Duration="0:0:0.36" Easing="{x:Null}" Orientation="Vertical" PixelsToAnimate="NaN" SlideMode="Bottom" SpeedRatio="0" TargetElementName="PopupChild"/>
					</telerik:AnimationGroup>
					<telerik:AnimationGroup AnimationName="BottomOut" SpeedRatio="0">
						<telerik:SlideAnimation AnimationName="{x:Null}" Direction="Out" Duration="0:0:0.4" Easing="{x:Null}" Orientation="Vertical" PixelsToAnimate="NaN" SlideMode="Bottom" SpeedRatio="0" TargetElementName="PopupChild"/>
					</telerik:AnimationGroup>
				</telerik:AnimationSelector>
			</Setter.Value>
		</Setter>
	</Style>
	<Style  TargetType="{x:Type telerik:DocumentHost}">
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="MinWidth" Value="25"/>
		<Setter Property="MinHeight" Value="25"/>
		<Setter Property="Background" Value="#FFFFFFFF"/>
		<Setter Property="AllowDrop" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:DocumentHost}">
					<Border  BorderThickness="0"  Padding="0" Background="#FFFFFFFF" >
						<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="IconRadRadioButtonStyle" TargetType="{x:Type telerik:RadRadioButton}">
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="BorderBrush" Value="#00FFFFFF"/>
		<Setter Property="Background" Value="#00FFFFFF"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="CornerRadius" Value="1"/>
		<Setter Property="Padding" Value="3"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadRadioButton}">
					<Grid x:Name="grid" SnapsToDevicePixels="True" Opacity="0.3">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Content">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.845"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									
								</VisualState>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
								<VisualState x:Name="DisabledChecked"/>
								<VisualState x:Name="MouseOverChecked"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="BackgroundVisibility">
								<VisualState x:Name="BackgroundIsHidden"/>
								<VisualState x:Name="BackgroundIsVisible"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
								
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								
								</VisualState>
								<VisualState x:Name="Unchecked"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStatesGroup">
								<VisualState x:Name="Unfocused1"/>
								<VisualState x:Name="Focused1"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
							<Border BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
						</Border>
						<Border x:Name="OuterMouseOverBorder" BorderBrush="#FFFFC92B" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FFFFFBDA" Offset="0"/>
									<GradientStop Color="#FFFEEBAE" Offset="0.5"/>
									<GradientStop Color="#FFFFD25A" Offset="0.5"/>
									<GradientStop Color="#FFFFFBA3" Offset="1"/>
								</LinearGradientBrush>
							</Border.Background>
							<Border BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
						</Border>
						<Border x:Name="OuterPressedBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
							<Border.BorderBrush>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FF282828"/>
									<GradientStop Color="#FF5F5F5F" Offset="1"/>
								</LinearGradientBrush>
							</Border.BorderBrush>
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FFFFDCAB" Offset="0"/>
									<GradientStop Color="#FFFFD18F" Offset="0.5"/>
									<GradientStop Color="#FFFE9227" Offset="0.5"/>
									<GradientStop Color="#FFFFBA74" Offset="0"/>
								</LinearGradientBrush>
							</Border.Background>
							<Border BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}">
								<Border.BorderBrush>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFB69A78"/>
										<GradientStop Color="#FFFFE17A" Offset="0.126"/>
									</LinearGradientBrush>
								</Border.BorderBrush>
							</Border>
						</Border>
						<Border x:Name="disabledBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="#FFE0E0E0" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed"/>
						<Border x:Name="CommonStatesWrapper">
							<Border x:Name="FocusVisual" BorderBrush="#FFFFC92B" BorderThickness="1" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
								<Border x:Name="FocusInnerVisual" BorderBrush="Transparent" BorderThickness="1" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
							</Border>
						</Border>
						<Border x:Name="CheckedVisual" BorderBrush="#FFFFC92B" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0">
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FFFFDCAB" Offset="0"/>
									<GradientStop Color="#FFFFD18F" Offset="0.5"/>
									<GradientStop Color="#FFFE9227" Offset="0.5"/>
									<GradientStop Color="#FFFFD74E" Offset="1"/>
								</LinearGradientBrush>
							</Border.Background>
							<Border x:Name="InnerCheckedVisual" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
						</Border>
						<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" TextElement.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
    
	<Style TargetType="{x:Type Button}">
		<Setter Property="Custom:ButtonHelper.CornerRadius" Value="3"/>
		<Setter Property="MinHeight" Value="25"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
		<Setter Property="Background" Value="{DynamicResource ButonBGBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ButonBGBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource ButonTextBrush}"/>
		<Setter Property="Padding" Value="4,4"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
										</ObjectAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
											<EasingColorKeyFrame KeyTime="0" Value="#FF09384D"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.33"/>
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Background" Background="{TemplateBinding Background}"/>
						<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#FF0B4863" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed"/>
						<Border x:Name="DisabledVisualElement" Background="White" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed"/>
						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Custom:ButtonHelper.PreserveTextCase" Value="False">
							<Setter Property="Content" TargetName="contentPresenter" Value="{Binding Content, Converter={Custom1:ToUpperConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
						</Trigger>
						<Trigger Property="Custom:ButtonHelper.PreserveTextCase" Value="True">
							<Setter Property="Content" TargetName="contentPresenter" Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush8}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush7}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="True">
							<Setter Property="BorderThickness" TargetName="Border" Value="2"/>
							<Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.3"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type telerik:RadTileView}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="AllowDrop" Value="True"/>
		<Setter Property="Padding" Value="7"/>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<telerik:TileViewPanel CanHorizontallyScroll="False" CanVerticallyScroll="False" ExtentHeight="0" ExtentWidth="0" IsItemsHost="True" ScrollOwner="{x:Null}" ViewportHeight="0" ViewportWidth="0"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadTileView}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="Docking">
								<VisualState x:Name="DockTop">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaTop">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaBottom">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaLeft">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaRight">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DockLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaTop">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaBottom">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaLeft">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaRight">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DockRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaTop">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaBottom">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaLeft">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaRight">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DockBottom">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaTop">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaBottom">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaLeft">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaRight">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HideMaximizeArea">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaTop">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaBottom">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaLeft">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MaximizeAreaRight">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center">
							<ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Background="Transparent" CanContentScroll="True" HorizontalScrollBarVisibility="{Binding (ScrollViewer.HorizontalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}" VerticalScrollBarVisibility="{Binding (ScrollViewer.VerticalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}">
								<telerik:StyleManager.Theme>
									<telerik:Office_BlackTheme/>
								</telerik:StyleManager.Theme>
								<ItemsPresenter/>
							</ScrollViewer>
						</Border>
						<Rectangle x:Name="DisabledVisual" Grid.ColumnSpan="2" Fill="#99FFFFFF" Grid.RowSpan="2" Visibility="Collapsed"/>
						<Border x:Name="MaximizeAreaTop" BorderBrush="#B2FFCD27" BorderThickness="2" Background="#66FFF62D" Grid.ColumnSpan="2" Grid.Row="0" Visibility="Collapsed"/>
						<Border x:Name="MaximizeAreaBottom" BorderBrush="#B2FFCD27" BorderThickness="2" Background="#66FFF62D" Grid.ColumnSpan="2" Grid.Row="1" Visibility="Collapsed"/>
						<Border x:Name="MaximizeAreaLeft" BorderBrush="#B2FFCD27" BorderThickness="2" Background="#66FFF62D" Grid.Column="0" Grid.RowSpan="2" Visibility="Collapsed"/>
						<Border x:Name="MaximizeAreaRight" BorderBrush="#B2FFCD27" BorderThickness="2" Background="#66FFF62D" Grid.Column="1" Grid.RowSpan="2" Visibility="Collapsed"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
    
	<Style  TargetType="{x:Type telerik:RadTileViewItem}">
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="HeaderStyle">
			<Setter.Value>
				<Style TargetType="{x:Type TileView:TileViewItemHeader}">
					<Setter Property="Background">
						<Setter.Value>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#FFF6F6F6"/>
								<GradientStop Color="#FFD2D2D2" Offset="1"/>
							</LinearGradientBrush>
						</Setter.Value>
					</Setter>
					<Setter Property="HorizontalContentAlignment" Value="Center"/>
					<Setter Property="VerticalContentAlignment" Value="Center"/>
					<Setter Property="HorizontalAlignment" Value="Center"/>
					<Setter Property="VerticalAlignment" Value="Center"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TileView:TileViewItemHeader}">
								<Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="TileStates">
											<VisualState x:Name="Maximized">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsChecked" Storyboard.TargetName="MaximizeToggleButton">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>True</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Restored">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsChecked" Storyboard.TargetName="MaximizeToggleButton">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>False</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Border BorderThickness="0" CornerRadius="0" Padding="0" Margin="0,0,0,0">
										<Grid >
											<Border x:Name="GripBarElement" Background="Transparent">
											<TextBlock x:Name="HeaderElement"  Text="{TemplateBinding Content}" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" FontFamily="{DynamicResource BoldFontFamily}" FontSize="16" />

												
											</Border>
											<telerik:RadToggleButton x:Name="MaximizeToggleButton" Command="TileView:TileViewCommands.ToggleTileState" InnerCornerRadius="0" Visibility="Collapsed">
												<telerik:RadToggleButton.Style>
													<Style TargetType="{x:Type telerik:RadToggleButton}">
														<Setter Property="VerticalAlignment" Value="Center"/>
														<Setter Property="HorizontalAlignment" Value="Right"/>
														<Setter Property="Width" Value="17"/>
														<Setter Property="Height" Value="17"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
																	<Grid Background="Transparent">
																		<VisualStateManager.VisualStateGroups>
																			<VisualStateGroup x:Name="FocusStates">
																				<VisualState x:Name="Focused"/>
																				<VisualState x:Name="Unfocused"/>
																			</VisualStateGroup>
																			<VisualStateGroup x:Name="CommonStates">
																				<VisualState x:Name="Disabled"/>
																				<VisualState x:Name="Normal"/>
																				<VisualState x:Name="MouseOver">
																					<Storyboard>
																						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="RestoreIcon">
																							<DiscreteObjectKeyFrame KeyTime="0">
																								<DiscreteObjectKeyFrame.Value>
																									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																										<GradientStop Color="#FFFEEDB7" Offset="0"/>
																										<GradientStop Color="#FFFACA6A" Offset="1"/>
																										<GradientStop Color="#FFFFC94A" Offset="0.526"/>
																										<GradientStop Color="#FFFEEDB7" Offset="0.509"/>
																									</LinearGradientBrush>
																								</DiscreteObjectKeyFrame.Value>
																							</DiscreteObjectKeyFrame>
																						</ObjectAnimationUsingKeyFrames>
																						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CollapseIcon">
																							<DiscreteObjectKeyFrame KeyTime="0">
																								<DiscreteObjectKeyFrame.Value>
																									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																										<GradientStop Color="#FFFEEDB7" Offset="0"/>
																										<GradientStop Color="#FFFACA6A" Offset="1"/>
																										<GradientStop Color="#FFFFC94A" Offset="0.526"/>
																										<GradientStop Color="#FFFEEDB7" Offset="0.509"/>
																									</LinearGradientBrush>
																								</DiscreteObjectKeyFrame.Value>
																							</DiscreteObjectKeyFrame>
																						</ObjectAnimationUsingKeyFrames>
																					</Storyboard>
																				</VisualState>
																				<VisualState x:Name="Pressed">
																					<Storyboard>
																						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="RestoreIcon">
																							<DiscreteObjectKeyFrame KeyTime="0">
																								<DiscreteObjectKeyFrame.Value>
																									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																										<GradientStop Color="#FFFECE95" Offset="0"/>
																										<GradientStop Color="#FFFEB407" Offset="1"/>
																										<GradientStop Color="#FFFEBB6E" Offset="0.517"/>
																										<GradientStop Color="#FFE78318" Offset="0.539"/>
																									</LinearGradientBrush>
																								</DiscreteObjectKeyFrame.Value>
																							</DiscreteObjectKeyFrame>
																						</ObjectAnimationUsingKeyFrames>
																						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CollapseIcon">
																							<DiscreteObjectKeyFrame KeyTime="0">
																								<DiscreteObjectKeyFrame.Value>
																									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																										<GradientStop Color="#FFFECE95" Offset="0"/>
																										<GradientStop Color="#FFFEB407" Offset="1"/>
																										<GradientStop Color="#FFFEBB6E" Offset="0.517"/>
																										<GradientStop Color="#FFE78318" Offset="0.539"/>
																									</LinearGradientBrush>
																								</DiscreteObjectKeyFrame.Value>
																							</DiscreteObjectKeyFrame>
																						</ObjectAnimationUsingKeyFrames>
																					</Storyboard>
																				</VisualState>
																			</VisualStateGroup>
																			<VisualStateGroup x:Name="CheckStates">
																				<VisualState x:Name="Checked">
																					<Storyboard>
																						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Restore">
																							<DiscreteObjectKeyFrame KeyTime="0">
																								<DiscreteObjectKeyFrame.Value>
																									<Visibility>Collapsed</Visibility>
																								</DiscreteObjectKeyFrame.Value>
																							</DiscreteObjectKeyFrame>
																						</ObjectAnimationUsingKeyFrames>
																						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Collapse">
																							<DiscreteObjectKeyFrame KeyTime="0">
																								<DiscreteObjectKeyFrame.Value>
																									<Visibility>Visible</Visibility>
																								</DiscreteObjectKeyFrame.Value>
																							</DiscreteObjectKeyFrame>
																						</ObjectAnimationUsingKeyFrames>
																					</Storyboard>
																				</VisualState>
																				<VisualState x:Name="Unchecked">
																					<Storyboard>
																						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Restore">
																							<DiscreteObjectKeyFrame KeyTime="0">
																								<DiscreteObjectKeyFrame.Value>
																									<Visibility>Visible</Visibility>
																								</DiscreteObjectKeyFrame.Value>
																							</DiscreteObjectKeyFrame>
																						</ObjectAnimationUsingKeyFrames>
																						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Collapse">
																							<DiscreteObjectKeyFrame KeyTime="0">
																								<DiscreteObjectKeyFrame.Value>
																									<Visibility>Collapsed</Visibility>
																								</DiscreteObjectKeyFrame.Value>
																							</DiscreteObjectKeyFrame>
																						</ObjectAnimationUsingKeyFrames>
																					</Storyboard>
																				</VisualState>
																				<VisualState x:Name="Indeterminate"/>
																			</VisualStateGroup>
																		</VisualStateManager.VisualStateGroups>
																		<Grid x:Name="Restore" Background="Transparent">
																			<Grid.ToolTip>
																				<ToolTip Content="Maximize" telerik:LocalizationManager.ResourceKey="TileViewItemMaximizeText"/>
																			</Grid.ToolTip>
																			<Path x:Name="RestoreIcon" Data="M2,5L2,9 6,9 6,5z M0,3L8,3 8,5 8,9 8,11 0,11 0,9 0,5z M3,0L11,0 11,2 11,9 9,9 9,2 3,2z" Margin="1" Stretch="Fill" Stroke="{x:Null}">
																				<Path.Fill>
																					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																						<GradientStop Color="#FF282828"/>
																						<GradientStop Color="#FF7C7C7C" Offset="1"/>
																					</LinearGradientBrush>
																				</Path.Fill>
																			</Path>
																			<Path Data="M1,12L9,12 9,13 1,13z M4,7L4,9 6,9 6,7z M3,6L7,6 7,7 7,9 7,10 3,10 3,9 3,7z M0,4L1,4 1,12 0,12z M12,1L13,1 13,10 12,10z M3,1L4,1 4,3 10,3 10,4 10,10 12,10 12,11 10,11 10,12 9,12 9,4 1,4 1,3 3,3z M4,0L12,0 12,1 4,1z" Fill="White" Stretch="Fill" Stroke="{x:Null}"/>
																		</Grid>
																		<Grid x:Name="Collapse" Background="Transparent" Visibility="Collapsed">
																			<Grid.ToolTip>
																				<ToolTip Content="Minimize" telerik:LocalizationManager.ResourceKey="TileViewItemMinimizeText"/>
																			</Grid.ToolTip>
																			<Rectangle x:Name="CollapseIcon" Height="5" Stroke="White" StrokeThickness="1" VerticalAlignment="Bottom" Width="13">
																				<Rectangle.Fill>
																					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																						<GradientStop Color="#FF282828"/>
																						<GradientStop Color="#FF7C7C7C" Offset="1"/>
																					</LinearGradientBrush>
																				</Rectangle.Fill>
																			</Rectangle>
																		</Grid>
																	</Grid>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</telerik:RadToggleButton.Style>
											</telerik:RadToggleButton>
										</Grid>
									</Border>
									<Border x:Name="Splitter" BorderThickness="0" Visibility="Collapsed" Height="Auto" Margin="0,28,0,3"/>
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="#FFf0f0f0"/>
		<Setter Property="BorderBrush" Value="#FFf0f0f0"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Padding" Value="7"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadTileViewItem}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverBorder">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SelectedItem">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unselected"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="MouseOverDraggingStates">
								<VisualState x:Name="MouseOverDragging">
									
								</VisualState>
								<VisualState x:Name="MouseNotOverDragging"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="outerContainer" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Padding}" Background="#FFF0EEEE">
							<Border x:Name="outerBorder" BorderThickness="2" BorderBrush="#FFD6D4D4" Background="{TemplateBinding Background}">
								<Grid>
									<Grid Background="Transparent" Grid.Row="1">
										<ContentPresenter x:Name="ContentElement" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
									</Grid>
									<Rectangle x:Name="DisabledVisual" Fill="#99FFFFFF" RadiusY="4" RadiusX="4" Grid.RowSpan="2" Visibility="Collapsed"/>
									<TileView:TileViewItemHeader x:Name="HeaderPart" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Style="{Binding HeaderStyle, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,10"/>
								</Grid>
							</Border>
						</Border>
						<Grid x:Name="SelectedItem" Margin="-1" Visibility="Collapsed">
							<Border BorderBrush="#FFFFC92B" BorderThickness="2" CornerRadius="2" Margin="{TemplateBinding Padding}"/>
						</Grid>
						<Border Margin="{TemplateBinding Padding}" x:Name="MouseOverBorder" BorderBrush="#FF1c6f93" BorderThickness="2" Visibility="Collapsed"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MenuRadExpanderStyle"  TargetType="{x:Type telerik:RadExpander}">
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="FontFamily" Value="{DynamicResource BoldFontFamily}"/>
		<Setter Property="Foreground" Value="#FF213F6A"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadExpander}">
					<Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStateGroup">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="arrow">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<SolidColorBrush Color="#FF8D8D8D"/>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
										<DoubleAnimation To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HeaderContent"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="HeaderStateGroup">
								<VisualState x:Name="NormalHeader"/>
								<VisualState x:Name="MouseOverHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="arrow">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<SolidColorBrush Color="Black"/>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PressedHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="arrow">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<SolidColorBrush Color="Black"/>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="HeaderOrientationGroup">
								<VisualState x:Name="HorizontalOrientation">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="HeaderContentTransform">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<RotateTransform Angle="0"/>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="HeaderContentTransform">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>1</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalOrientation">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="HeaderContentTransform">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<RotateTransform Angle="90"/>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="HeaderContentTransform">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>1</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ExpandStateGroup">
								<VisualState x:Name="Expanded">
									<Storyboard>
										<DoubleAnimation Duration="0:0:0.2" To="180" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)" Storyboard.TargetName="arrow"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Collapsed">
									<Storyboard>
										<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)" Storyboard.TargetName="arrow"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ExpandDirectionStates">
								<VisualStateGroup.Transitions>
									<VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="{x:Null}">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="Content">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<System:Int32>0</System:Int32>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="Content">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<System:Int32>0</System:Int32>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="HeaderButton">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<System:Int32>0</System:Int32>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="HeaderButton">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<System:Int32>0</System:Int32>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="col0">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<GridLength>Auto</GridLength>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="col1">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<GridLength>Auto</GridLength>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="row0">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<GridLength>Auto</GridLength>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="row1">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<GridLength>Auto</GridLength>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="DirectionLeft1">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="col0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="row0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="HeaderButton">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>1</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="90" Storyboard.TargetProperty="(UIElement.RenderTransform).Angle" Storyboard.TargetName="arrowPanel"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DirectionRight1">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="col1">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="row0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="Content">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>1</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="-90" Storyboard.TargetProperty="(UIElement.RenderTransform).Angle" Storyboard.TargetName="arrowPanel"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DirectionUp1">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="col0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="row0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="HeaderButton">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>1</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="180" Storyboard.TargetProperty="(UIElement.RenderTransform).Angle" Storyboard.TargetName="arrowPanel"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DirectionDown1">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="col0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="row1">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="Content">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>1</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition x:Name="col0" Width="*"/>
									<ColumnDefinition x:Name="col1" Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition x:Name="row0" Height="Auto"/>
									<RowDefinition x:Name="row1" Height="*"/>
								</Grid.RowDefinitions>
								<telerik:RadToggleButton x:Name="HeaderButton" Background="Transparent" ClickMode="{TemplateBinding ClickMode}" Foreground="#FF1c6f93" FontSize="10.667" FontFamily="{DynamicResource BoldFontFamily}"    HorizontalAlignment="{TemplateBinding HorizontalHeaderAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalHeaderAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" InnerCornerRadius="0" TabIndex="{TemplateBinding TabIndex}" VerticalAlignment="{TemplateBinding VerticalHeaderAlignment}" VerticalContentAlignment="{TemplateBinding VerticalHeaderAlignment}">
									
									
									<telerik:RadToggleButton.Template>
										<ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
											<Border HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" BorderThickness="0,0,0,1" BorderBrush="#FFd5d5d5" Padding="0,2,0,5">
												<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"/>
											</Border>
										</ControlTemplate>
									</telerik:RadToggleButton.Template>
									<Grid x:Name="HeaderPanel" Background="Transparent">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="*"/>
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="*"/>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>
										<Grid HorizontalAlignment="Right" Grid.Column="1" Margin="0,0,5,0">
											<Grid x:Name="arrowPanel" RenderTransformOrigin="0.5,0.5">
												<Grid.RenderTransform>
													<RotateTransform/>
												</Grid.RenderTransform>
												<Path x:Name="arrow" Data="M0,0L0.67,0 4,2.67 7.25,0 8,0 8,0.67 4,4 0,0.75z" Fill="#FF213F6A" Height="4" RenderTransformOrigin="0.5,0.5" Stretch="None" Width="8">
													<Path.RenderTransform>
														<TransformGroup>
															<RotateTransform Angle="0"/>
															<TranslateTransform/>
														</TransformGroup>
													</Path.RenderTransform>
												</Path>
											</Grid>
										</Grid>
										<telerik:LayoutTransformControl x:Name="HeaderContentTransform" IsTabStop="False" RenderTransformOrigin="0.5,0.5" FontSize="10.667" Foreground="#FF1c6f93" FontFamily="{DynamicResource BoldFontFamily}">
											<ContentPresenter x:Name="HeaderContent" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" HorizontalAlignment="Stretch" Margin="5,0" UseLayoutRounding="True" VerticalAlignment="Center"/>
										</telerik:LayoutTransformControl>
									</Grid>
								</telerik:RadToggleButton>
								<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" UseLayoutRounding="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Row="1"/>
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="telerik:AnimationManager.AnimationSelector">
			<Setter.Value>
				<telerik:AnimationSelector>
					<telerik:ExpanderExpandCollapseAnimation AnimationName="Expand" Direction="In" SpeedRatio="0" TargetElementName="Content"/>
					<telerik:ExpanderExpandCollapseAnimation AnimationName="Collapse" Direction="Out" SpeedRatio="0" TargetElementName="Content"/>
				</telerik:AnimationSelector>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MainRadMenuItemStyle" TargetType="{x:Type telerik:RadMenuItem}">
        <Setter Property="Foreground" Value="#FF1c6f93"/>
		<Setter Property="Padding" Value="6,3"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadMenuItem}">
					<Grid x:Name="RootElement">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="SubMenuOpen1">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Highlighted1">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled1">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentGrid"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal1"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused1"/>
								<VisualState x:Name="Focused1"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked1">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked1"/>
								<VisualState x:Name="HideIcon1">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="RoleStates">
								<VisualState x:Name="TopLevelItem">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopLevelHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SubmenuItem"/>
								<VisualState x:Name="SubmenuHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ExpandIcon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Separator"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Horizontal"/>
								<VisualState x:Name="Vertical"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ChildrenStates">
								<VisualState x:Name="HasChildren"/>
								<VisualState x:Name="NoChildren"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="HeaderStates">
								<VisualState x:Name="VisibleHeader"/>
								<VisualState x:Name="EmptyHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>5,3,4,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Content">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="InputGestureTextStates">
								<VisualState x:Name="EmptyInputGestureText"/>
								<VisualState x:Name="VisibleInputGestureText">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_InputGestureText">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
						<Grid x:Name="ContentGrid" Margin="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="HighlightVisual" Grid.ColumnSpan="4" Opacity="0" Background="#FFD6D6D6">
								<Border x:Name="HighlightInnerBorderVisual" BorderThickness="1" CornerRadius="0"/>
							</Border>
							<Grid x:Name="IconHost" Margin="-2,0,-1,0" Width="{TemplateBinding IconColumnWidth}">
								<Path x:Name="Tick" Data="M4,7.1L5.7,7.2 7.4,9.1 12,2.4 13.2,2 7.3,13.8z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Height="16" Margin="5,3,6,3" Visibility="Collapsed" Width="16"/>
								<ContentPresenter x:Name="Icon" ContentTemplate="{TemplateBinding IconTemplate}" Content="{TemplateBinding Icon}" Margin="5,3,6,3"/>
							</Grid>
							<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<telerik:SharedSizeContentPresenter x:Name="PART_InputGestureText" Content="{TemplateBinding InputGestureText}" Grid.Column="2" Margin="40,3,3,3" SharedSizeGroupWidth="IGTColumn" Visibility="Collapsed"/>
							<telerik:SharedSizeContentPresenter Grid.Column="3" HorizontalAlignment="Right" SharedSizeGroupWidth="ExpandIconColumn">
								<Grid x:Name="ExpandIcon" Height="19" Margin="0,0,2,0" Visibility="Collapsed" Width="16">
									<Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="White" Margin="6,7,6,5"/>
									<Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="Black" Margin="6"/>
								</Grid>
							</telerik:SharedSizeContentPresenter>
						</Grid>
						<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-1" IsOpen="{TemplateBinding IsSubmenuOpen}" VerticalOffset="-1">
							<Grid Height="{TemplateBinding DropDownHeight}" Width="{TemplateBinding DropDownWidth}">
								<Grid x:Name="PopupContentElement">
									<Border BorderBrush="#FF848484" BorderThickness="1" Background="White">
										<Grid>
											<Border x:Name="IconSeparatorBackground" BorderBrush="#FF848484" BorderThickness="0,0,1,0" Background="#FFF0F0F0" HorizontalAlignment="Left" Width="{Binding IconColumnWidth, RelativeSource={RelativeSource TemplatedParent}}"/>
											<ScrollViewer x:Name="PART_ScrollViewer" telerik:SharedSizeScope.IsSharedSizeScope="True">
												<ScrollViewer.Style>
													<Style TargetType="{x:Type ScrollViewer}">
														<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
														<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
														<Setter Property="CanContentScroll" Value="True"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type ScrollViewer}">
																	<Grid SnapsToDevicePixels="True">
																		<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineUpCommand" Focusable="False" VerticalAlignment="Top">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,0,0,1"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="Black"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="White"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="White" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="Black" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
																							<Setter Property="Background" Value="#FFDEDEDE"/>
																							<Setter Property="BorderBrush" Value="White"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="0" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineDownCommand" Focusable="False" VerticalAlignment="Bottom">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,1,0,0"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="Black"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="White"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="White" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="Black" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
																							<Setter Property="Background" Value="#FFDEDEDE"/>
																							<Setter Property="BorderBrush" Value="White"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="100" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																	</Grid>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</ScrollViewer.Style>
												<Grid>
													<ItemsPresenter/>
												</Grid>
											</ScrollViewer>
										</Grid>
									</Border>
								</Grid>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="TopLevelHeaderTemplateKey">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadMenuItem}">
					<Grid x:Name="RootElement">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="SubMenuOpen">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FFFFDCAB" Offset="0"/>
														<GradientStop Color="#FFFFD18F" Offset="0.5"/>
														<GradientStop Color="#FFFE9227" Offset="0.5"/>
														<GradientStop Color="#FFFFBA74" Offset="0"/>
													</LinearGradientBrush>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FF282828"/>
														<GradientStop Color="#FF5F5F5F" Offset="1"/>
													</LinearGradientBrush>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightInnerBorderVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FFB69A78"/>
														<GradientStop Color="#FFFFE17A" Offset="0.126"/>
													</LinearGradientBrush>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Highlighted">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentGrid"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="HideIcon">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="RoleStates">
								<VisualState x:Name="TopLevelItem">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopLevelHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SubmenuItem"/>
								<VisualState x:Name="SubmenuHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ExpandIcon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Separator"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Horizontal"/>
								<VisualState x:Name="Vertical"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ChildrenStates">
								<VisualState x:Name="HasChildren"/>
								<VisualState x:Name="NoChildren"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="HeaderStates">
								<VisualState x:Name="VisibleHeader"/>
								<VisualState x:Name="EmptyHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>5,3,4,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Content">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="InputGestureTextStates">
								<VisualState x:Name="EmptyInputGestureText"/>
								<VisualState x:Name="VisibleInputGestureText">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_InputGestureText">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
						<Grid x:Name="ContentGrid" Margin="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="HighlightVisual" BorderBrush="#FFFFC92B" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="1" Opacity="0">
								<Border.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFFFFBDA" Offset="0"/>
										<GradientStop Color="#FFFFFBA3" Offset="1"/>
									</LinearGradientBrush>
								</Border.Background>
								<Border x:Name="HighlightInnerBorderVisual" BorderBrush="White" BorderThickness="1" CornerRadius="0"/>
							</Border>
							<Grid x:Name="IconHost" Margin="-2,0,-1,0" Width="{TemplateBinding IconColumnWidth}">
								<Path x:Name="Tick" Data="M4,7.1L5.7,7.2 7.4,9.1 12,2.4 13.2,2 7.3,13.8z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Height="16" Margin="5,3,6,3" Visibility="Collapsed" Width="16"/>
								<ContentPresenter x:Name="Icon" ContentTemplate="{TemplateBinding IconTemplate}" Content="{TemplateBinding Icon}" Margin="5,3,6,3"/>
							</Grid>
							<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<telerik:SharedSizeContentPresenter x:Name="PART_InputGestureText" Content="{TemplateBinding InputGestureText}" Grid.Column="2" Margin="40,3,3,3" SharedSizeGroupWidth="IGTColumn" Visibility="Collapsed"/>
							<telerik:SharedSizeContentPresenter Grid.Column="3" HorizontalAlignment="Right" SharedSizeGroupWidth="ExpandIconColumn">
								<Grid x:Name="ExpandIcon" Height="19" Margin="0,0,2,0" Visibility="Collapsed" Width="16">
									<Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="White" Margin="6,7,6,5"/>
									<Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="Black" Margin="6"/>
								</Grid>
							</telerik:SharedSizeContentPresenter>
						</Grid>
						<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-1" IsOpen="{TemplateBinding IsSubmenuOpen}" VerticalOffset="-1">
							<Grid Height="{TemplateBinding DropDownHeight}" Width="{TemplateBinding DropDownWidth}">
								<Grid x:Name="PopupContentElement">
									<Border BorderBrush="#FF848484" BorderThickness="1" Background="White">
										<Grid>
											<Border x:Name="IconSeparatorBackground" BorderBrush="#FF848484" BorderThickness="0,0,1,0" Background="#FFF0F0F0" HorizontalAlignment="Left" Width="{Binding IconColumnWidth, RelativeSource={RelativeSource TemplatedParent}}"/>
											<ScrollViewer x:Name="PART_ScrollViewer" telerik:SharedSizeScope.IsSharedSizeScope="True">
												<ScrollViewer.Style>
													<Style TargetType="{x:Type ScrollViewer}">
														<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
														<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
														<Setter Property="CanContentScroll" Value="True"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type ScrollViewer}">
																	<Grid SnapsToDevicePixels="True">
																		<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineUpCommand" Focusable="False" VerticalAlignment="Top">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,0,0,1"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="Black"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="White"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="White" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="Black" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
																							<Setter Property="Background" Value="#FFDEDEDE"/>
																							<Setter Property="BorderBrush" Value="White"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="0" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineDownCommand" Focusable="False" VerticalAlignment="Bottom">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,1,0,0"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="Black"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="White"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="White" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="Black" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
																							<Setter Property="Background" Value="#FFDEDEDE"/>
																							<Setter Property="BorderBrush" Value="White"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="100" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																	</Grid>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</ScrollViewer.Style>
												<Grid>
													<ItemsPresenter/>
												</Grid>
											</ScrollViewer>
										</Grid>
									</Border>
								</Grid>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="TopLevelItemTemplateKey">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadMenuItem}">
					<Grid x:Name="RootElement">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="SubMenuOpen1">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FFFFDCAB" Offset="0"/>
														<GradientStop Color="#FFFFD18F" Offset="0.5"/>
														<GradientStop Color="#FFFE9227" Offset="0.5"/>
														<GradientStop Color="#FFFFBA74" Offset="0"/>
													</LinearGradientBrush>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FF282828"/>
														<GradientStop Color="#FF5F5F5F" Offset="1"/>
													</LinearGradientBrush>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightInnerBorderVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FFB69A78"/>
														<GradientStop Color="#FFFFE17A" Offset="0.126"/>
													</LinearGradientBrush>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Highlighted1">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled1">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentGrid"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal1"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused1"/>
								<VisualState x:Name="Focused1"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked1">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked1"/>
								<VisualState x:Name="HideIcon1">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="RoleStates">
								<VisualState x:Name="TopLevelItem">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopLevelHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SubmenuItem"/>
								<VisualState x:Name="SubmenuHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ExpandIcon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Separator"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Horizontal"/>
								<VisualState x:Name="Vertical"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ChildrenStates">
								<VisualState x:Name="HasChildren"/>
								<VisualState x:Name="NoChildren"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="HeaderStates">
								<VisualState x:Name="VisibleHeader"/>
								<VisualState x:Name="EmptyHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>5,3,4,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Content">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="InputGestureTextStates">
								<VisualState x:Name="EmptyInputGestureText"/>
								<VisualState x:Name="VisibleInputGestureText">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_InputGestureText">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
						<Grid x:Name="ContentGrid" Margin="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="HighlightVisual" BorderBrush="#FFFFC92B" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="1" Opacity="0">
								<Border.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFFFFBDA" Offset="0"/>
										<GradientStop Color="#FFFFFBA3" Offset="1"/>
									</LinearGradientBrush>
								</Border.Background>
								<Border x:Name="HighlightInnerBorderVisual" BorderBrush="White" BorderThickness="1" CornerRadius="0"/>
							</Border>
							<Grid x:Name="IconHost" Margin="-2,0,-1,0" Width="{TemplateBinding IconColumnWidth}">
								<Path x:Name="Tick" Data="M4,7.1L5.7,7.2 7.4,9.1 12,2.4 13.2,2 7.3,13.8z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Height="16" Margin="5,3,6,3" Visibility="Collapsed" Width="16"/>
								<ContentPresenter x:Name="Icon" ContentTemplate="{TemplateBinding IconTemplate}" Content="{TemplateBinding Icon}" Margin="5,3,6,3"/>
							</Grid>
							<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<telerik:SharedSizeContentPresenter x:Name="PART_InputGestureText" Content="{TemplateBinding InputGestureText}" Grid.Column="2" Margin="40,3,3,3" SharedSizeGroupWidth="IGTColumn" Visibility="Collapsed"/>
							<telerik:SharedSizeContentPresenter Grid.Column="3" HorizontalAlignment="Right" SharedSizeGroupWidth="ExpandIconColumn">
								<Grid x:Name="ExpandIcon" Height="19" Margin="0,0,2,0" Visibility="Collapsed" Width="16">
									<Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="White" Margin="6,7,6,5"/>
									<Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="Black" Margin="6"/>
								</Grid>
							</telerik:SharedSizeContentPresenter>
						</Grid>
						<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-1" IsOpen="{TemplateBinding IsSubmenuOpen}" VerticalOffset="-1">
							<Grid Height="{TemplateBinding DropDownHeight}" Width="{TemplateBinding DropDownWidth}">
								<Grid x:Name="PopupContentElement">
									<Border BorderBrush="#FF848484" BorderThickness="1" Background="White">
										<Grid>
											<Border x:Name="IconSeparatorBackground" BorderBrush="#FF848484" BorderThickness="0,0,1,0" Background="#FFF0F0F0" HorizontalAlignment="Left" Width="{Binding IconColumnWidth, RelativeSource={RelativeSource TemplatedParent}}"/>
											<ScrollViewer x:Name="PART_ScrollViewer" telerik:SharedSizeScope.IsSharedSizeScope="True">
												<ScrollViewer.Style>
													<Style TargetType="{x:Type ScrollViewer}">
														<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
														<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
														<Setter Property="CanContentScroll" Value="True"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type ScrollViewer}">
																	<Grid SnapsToDevicePixels="True">
																		<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineUpCommand" Focusable="False" VerticalAlignment="Top">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,0,0,1"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="Black"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="White"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="White" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="Black" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
																							<Setter Property="Background" Value="#FFDEDEDE"/>
																							<Setter Property="BorderBrush" Value="White"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="0" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineDownCommand" Focusable="False" VerticalAlignment="Bottom">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,1,0,0"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="Black"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="White"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="White" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="Black" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
																							<Setter Property="Background" Value="#FFDEDEDE"/>
																							<Setter Property="BorderBrush" Value="White"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="100" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																	</Grid>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</ScrollViewer.Style>
												<Grid>
													<ItemsPresenter/>
												</Grid>
											</ScrollViewer>
										</Grid>
									</Border>
								</Grid>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="SubmenuHeaderTemplateKey">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadMenuItem}">
					<Grid x:Name="RootElement">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="SubMenuOpen">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FFFFDCAB" Offset="0"/>
														<GradientStop Color="#FFFFD18F" Offset="0.5"/>
														<GradientStop Color="#FFFE9227" Offset="0.5"/>
														<GradientStop Color="#FFFFBA74" Offset="0"/>
													</LinearGradientBrush>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FF282828"/>
														<GradientStop Color="#FF5F5F5F" Offset="1"/>
													</LinearGradientBrush>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightInnerBorderVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FFB69A78"/>
														<GradientStop Color="#FFFFE17A" Offset="0.126"/>
													</LinearGradientBrush>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Highlighted">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentGrid"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="HideIcon">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="RoleStates">
								<VisualState x:Name="TopLevelItem">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopLevelHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SubmenuItem"/>
								<VisualState x:Name="SubmenuHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ExpandIcon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Separator"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Horizontal"/>
								<VisualState x:Name="Vertical"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ChildrenStates">
								<VisualState x:Name="HasChildren"/>
								<VisualState x:Name="NoChildren"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="HeaderStates">
								<VisualState x:Name="VisibleHeader"/>
								<VisualState x:Name="EmptyHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>5,3,4,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Content">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="InputGestureTextStates">
								<VisualState x:Name="EmptyInputGestureText"/>
								<VisualState x:Name="VisibleInputGestureText">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_InputGestureText">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
						<Grid x:Name="ContentGrid" Margin="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="HighlightVisual" BorderBrush="#FFFFC92B" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="1" Opacity="0">
								<Border.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFFFFBDA" Offset="0"/>
										<GradientStop Color="#FFFFFBA3" Offset="1"/>
									</LinearGradientBrush>
								</Border.Background>
								<Border x:Name="HighlightInnerBorderVisual" BorderBrush="White" BorderThickness="1" CornerRadius="0"/>
							</Border>
							<Grid x:Name="IconHost" Margin="-2,0,-1,0" Width="{TemplateBinding IconColumnWidth}">
								<Path x:Name="Tick" Data="M4,7.1L5.7,7.2 7.4,9.1 12,2.4 13.2,2 7.3,13.8z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Height="16" Margin="5,3,6,3" Visibility="Collapsed" Width="16"/>
								<ContentPresenter x:Name="Icon" ContentTemplate="{TemplateBinding IconTemplate}" Content="{TemplateBinding Icon}" Margin="5,3,6,3"/>
							</Grid>
							<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<telerik:SharedSizeContentPresenter x:Name="PART_InputGestureText" Content="{TemplateBinding InputGestureText}" Grid.Column="2" Margin="40,3,3,3" SharedSizeGroupWidth="IGTColumn" Visibility="Collapsed"/>
							<telerik:SharedSizeContentPresenter Grid.Column="3" HorizontalAlignment="Right" SharedSizeGroupWidth="ExpandIconColumn">
								<Grid x:Name="ExpandIcon" Height="19" Margin="0,0,2,0" Visibility="Collapsed" Width="16">
									<Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="White" Margin="6,7,6,5"/>
									<Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="Black" Margin="6"/>
								</Grid>
							</telerik:SharedSizeContentPresenter>
						</Grid>
						<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-1" IsOpen="{TemplateBinding IsSubmenuOpen}" VerticalOffset="-1">
							<Grid Height="{TemplateBinding DropDownHeight}" Width="{TemplateBinding DropDownWidth}">
								<Grid x:Name="PopupContentElement">
									<Border BorderBrush="#FF848484" BorderThickness="1" Background="White">
										<Grid>
											<Border x:Name="IconSeparatorBackground" BorderBrush="#FF848484" BorderThickness="0,0,1,0" Background="#FFF0F0F0" HorizontalAlignment="Left" Width="{Binding IconColumnWidth, RelativeSource={RelativeSource TemplatedParent}}"/>
											<ScrollViewer x:Name="PART_ScrollViewer" telerik:SharedSizeScope.IsSharedSizeScope="True">
												<ScrollViewer.Style>
													<Style TargetType="{x:Type ScrollViewer}">
														<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
														<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
														<Setter Property="CanContentScroll" Value="True"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type ScrollViewer}">
																	<Grid SnapsToDevicePixels="True">
																		<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineUpCommand" Focusable="False" VerticalAlignment="Top">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,0,0,1"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="Black"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="White"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="White" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="Black" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
																							<Setter Property="Background" Value="#FFDEDEDE"/>
																							<Setter Property="BorderBrush" Value="White"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="0" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineDownCommand" Focusable="False" VerticalAlignment="Bottom">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,1,0,0"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="Black"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="White"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="White" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="Black" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
																							<Setter Property="Background" Value="#FFDEDEDE"/>
																							<Setter Property="BorderBrush" Value="White"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="100" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																	</Grid>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</ScrollViewer.Style>
												<Grid>
													<ItemsPresenter/>
												</Grid>
											</ScrollViewer>
										</Grid>
									</Border>
								</Grid>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="SubmenuItemTemplateKey">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadMenuItem}">
					<Grid x:Name="RootElement">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="SubMenuOpen">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FFFFDCAB" Offset="0"/>
														<GradientStop Color="#FFFFD18F" Offset="0.5"/>
														<GradientStop Color="#FFFE9227" Offset="0.5"/>
														<GradientStop Color="#FFFFBA74" Offset="0"/>
													</LinearGradientBrush>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FF282828"/>
														<GradientStop Color="#FF5F5F5F" Offset="1"/>
													</LinearGradientBrush>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightInnerBorderVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FFB69A78"/>
														<GradientStop Color="#FFFFE17A" Offset="0.126"/>
													</LinearGradientBrush>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Highlighted">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentGrid"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="HideIcon">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="RoleStates">
								<VisualState x:Name="TopLevelItem">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopLevelHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SubmenuItem"/>
								<VisualState x:Name="SubmenuHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ExpandIcon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Separator"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Horizontal"/>
								<VisualState x:Name="Vertical"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ChildrenStates">
								<VisualState x:Name="HasChildren"/>
								<VisualState x:Name="NoChildren"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="HeaderStates">
								<VisualState x:Name="VisibleHeader"/>
								<VisualState x:Name="EmptyHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>5,3,4,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Content">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="InputGestureTextStates">
								<VisualState x:Name="EmptyInputGestureText"/>
								<VisualState x:Name="VisibleInputGestureText">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_InputGestureText">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
						<Grid x:Name="ContentGrid" Margin="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="HighlightVisual" BorderBrush="#FFFFC92B" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="1" Opacity="0">
								<Border.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFFFFBDA" Offset="0"/>
										<GradientStop Color="#FFFFFBA3" Offset="1"/>
									</LinearGradientBrush>
								</Border.Background>
								<Border x:Name="HighlightInnerBorderVisual" BorderBrush="White" BorderThickness="1" CornerRadius="0"/>
							</Border>
							<Grid x:Name="IconHost" Margin="-2,0,-1,0" Width="{TemplateBinding IconColumnWidth}">
								<Path x:Name="Tick" Data="M4,7.1L5.7,7.2 7.4,9.1 12,2.4 13.2,2 7.3,13.8z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Height="16" Margin="5,3,6,3" Visibility="Collapsed" Width="16"/>
								<ContentPresenter x:Name="Icon" ContentTemplate="{TemplateBinding IconTemplate}" Content="{TemplateBinding Icon}" Margin="5,3,6,3"/>
							</Grid>
							<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<telerik:SharedSizeContentPresenter x:Name="PART_InputGestureText" Content="{TemplateBinding InputGestureText}" Grid.Column="2" Margin="40,3,3,3" SharedSizeGroupWidth="IGTColumn" Visibility="Collapsed"/>
							<telerik:SharedSizeContentPresenter Grid.Column="3" HorizontalAlignment="Right" SharedSizeGroupWidth="ExpandIconColumn">
								<Grid x:Name="ExpandIcon" Height="19" Margin="0,0,2,0" Visibility="Collapsed" Width="16">
									<Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="White" Margin="6,7,6,5"/>
									<Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="Black" Margin="6"/>
								</Grid>
							</telerik:SharedSizeContentPresenter>
						</Grid>
						<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-1" IsOpen="{TemplateBinding IsSubmenuOpen}" VerticalOffset="-1">
							<Grid Height="{TemplateBinding DropDownHeight}" Width="{TemplateBinding DropDownWidth}">
								<Grid x:Name="PopupContentElement">
									<Border BorderBrush="#FF848484" BorderThickness="1" Background="White">
										<Grid>
											<Border x:Name="IconSeparatorBackground" BorderBrush="#FF848484" BorderThickness="0,0,1,0" Background="#FFF0F0F0" HorizontalAlignment="Left" Width="{Binding IconColumnWidth, RelativeSource={RelativeSource TemplatedParent}}"/>
											<ScrollViewer x:Name="PART_ScrollViewer" telerik:SharedSizeScope.IsSharedSizeScope="True">
												<ScrollViewer.Style>
													<Style TargetType="{x:Type ScrollViewer}">
														<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
														<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
														<Setter Property="CanContentScroll" Value="True"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type ScrollViewer}">
																	<Grid SnapsToDevicePixels="True">
																		<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineUpCommand" Focusable="False" VerticalAlignment="Top">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,0,0,1"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="Black"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="White"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="White" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="Black" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
																							<Setter Property="Background" Value="#FFDEDEDE"/>
																							<Setter Property="BorderBrush" Value="White"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="0" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineDownCommand" Focusable="False" VerticalAlignment="Bottom">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,1,0,0"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="Black"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="White"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="White" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="Black" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
																							<Setter Property="Background" Value="#FFDEDEDE"/>
																							<Setter Property="BorderBrush" Value="White"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="100" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																	</Grid>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</ScrollViewer.Style>
												<Grid>
													<ItemsPresenter/>
												</Grid>
											</ScrollViewer>
										</Grid>
									</Border>
								</Grid>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="SeparatorTemplateKey">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadMenuItem}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="VerticalState"/>
								<VisualState x:Name="HorizontalState">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HorizontalSeparator">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="VerticalSeparator">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="HorizontalSeparator">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid Grid.Column="0" HorizontalAlignment="Left" Width="{TemplateBinding IconColumnWidth}"/>
							<Grid Grid.Column="1" Height="2" Margin="4,4,4,3">
								<Rectangle Fill="#FF848484" Height="1" VerticalAlignment="Top"/>
								<Rectangle Fill="Transparent" Height="1" VerticalAlignment="Bottom"/>
							</Grid>
						</Grid>
						<Grid x:Name="VerticalSeparator" Margin="2" Visibility="Collapsed" Width="2">
							<Rectangle Fill="#FF848484" HorizontalAlignment="Left" Width="1"/>
							<Rectangle Fill="Transparent" HorizontalAlignment="Right" Width="1"/>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Style.BasedOn>
			<Style TargetType="{x:Type telerik:RadMenuItem}">
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="BorderBrush" Value="#FF848484"/>
				<Setter Property="BorderThickness" Value="0"/>
				<Setter Property="HorizontalContentAlignment" Value="Left"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="SnapsToDevicePixels" Value="True"/>
				<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			</Style>
		</Style.BasedOn>
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Template" Value="{Binding TopLevelHeaderTemplateKey, RelativeSource={RelativeSource Self}}"/>
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Template" Value="{Binding TopLevelItemTemplateKey, RelativeSource={RelativeSource Self}}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Template" Value="{Binding SubmenuHeaderTemplateKey, RelativeSource={RelativeSource Self}}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="Template" Value="{Binding SubmenuItemTemplateKey, RelativeSource={RelativeSource Self}}"/>
			</Trigger>
			<Trigger Property="Role" Value="Separator">
				<Setter Property="Template" Value="{Binding SeparatorTemplateKey, RelativeSource={RelativeSource Self}}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="MainRadMenuStyle" TargetType="{x:Type telerik:RadMenu}">
		<Setter Property="IconColumnWidth" Value="27"/>
		<Setter Property="Background" Value="#FFBFBFBF"/>
		<Setter Property="Foreground" Value="#FF1c6f93"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Padding" Value="1,0"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<telerik:RadWrapPanel IsItemsHost="True" IsAnimated="False" Orientation="{Binding Orientation, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type telerik:RadMenu}}}"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadMenu}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
						<ItemsPresenter Margin="{TemplateBinding Padding}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		
	</Style>
	<Style x:Key="TileButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0" Value="#FF32629C"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0" Value="#AC32629C"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="border" BorderBrush="#0032629C" BorderThickness="3">
							<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsDefaulted" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True"/>
						<Trigger Property="IsPressed" Value="True"/>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="SwitchUserButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0" Value="White"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="border" BorderBrush="#19FFFFFF" BorderThickness="2" Background="#00000000">
							<Grid>
								<Path Data="M157.6991,324.70691 C157.82727,324.76001 157.90674,324.93048 157.90674,325.20551 L157.90674,422.52948 C157.90674,423.07953 158.35669,423.52948 158.90674,423.52948 L392.59668,423.52948 C393.14673,423.52948 393.59668,423.98053 393.5957,424.52948 L393.5957,540.37549 C393.5957,540.92554 393.14575,541.37549 392.5957,541.37549 L158.90576,541.37549 C158.35571,541.37549 157.90576,541.8255 157.90576,542.37549 L157.90576,639.84955 C157.90576,640.39948 157.58777,640.53156 157.19873,640.14252 L0.29174805,483.2345 C-0.097290039,482.84552 -0.097290039,482.20953 0.29174805,481.8205 L157.19971,324.91254 C157.39429,324.71802 157.57104,324.65375 157.6991,324.70691 z M393.80432,0.017883301 C393.93237,-0.035247803 394.10913,0.028991699 394.30371,0.22351074 L551.21069,157.13049 C551.59973,157.51953 551.59973,158.15552 551.21069,158.54553 L394.30371,315.45251 C393.91467,315.84149 393.59668,315.70953 393.59668,315.15948 L393.59668,217.83551 C393.59668,217.28552 393.14673,216.83551 392.59668,216.83551 L158.90674,216.83551 C158.35669,216.83551 157.90674,216.3855 157.90674,215.83551 L157.90674,99.990479 C157.90674,99.440491 158.35669,98.990479 158.90674,98.990479 L392.59668,98.990479 C393.14673,98.990479 393.59668,98.540527 393.59668,97.990479 L393.59668,0.51651001 C393.59668,0.24151611 393.67615,0.071014404 393.80432,0.017883301 z" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Width="18" Height="18" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="White">
									<Path.RenderTransform>
										<TransformGroup>
											<ScaleTransform ScaleX="-1"/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform/>
										</TransformGroup>
									</Path.RenderTransform>
								</Path>
								<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed"/>
							</Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsDefaulted" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True"/>
						<Trigger Property="IsPressed" Value="True"/>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MainMenuButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="FontFamily" Value="{StaticResource BoldFontFamily}"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Foreground" Value="{StaticResource MainMenuTextBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0" Value="#FF1C486E"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0" Value="#991A4163"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="border" Padding="5" Background="#00BCD7EE" BorderBrush="#19FFFFFF" BorderThickness="0,0,0,1">
							<Grid>
								<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="Left"/>
							</Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsDefaulted" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True"/>
						<Trigger Property="IsPressed" Value="True"/>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ToolMenuButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="grid">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0" Value="#FFC2C4C5"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0" Value="#CCC2C4C5"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="border" Background="#00C2C4C5" Padding="3">
							<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsDefaulted" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True"/>
						<Trigger Property="IsPressed" Value="True"/>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MinSearchButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Custom:ButtonHelper.CornerRadius" Value="3"/>
		<Setter Property="MinHeight" Value="26"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
		<Setter Property="Background" Value="{DynamicResource ButonBGBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ButonBGBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource ButonTextBrush}"/>
		<Setter Property="Padding" Value="4,4"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
											<EasingColorKeyFrame KeyTime="0" Value="#FF134E68"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Background" Background="#FF1C6F93"/>
						<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						<Path Data="M1469.135,793.221l-35.182-35.182c8.389-10.749,13.085-24.042,13.085-37.94c0-34.021-27.687-61.695-61.695-61.695  c-34.021,0-61.707,27.674-61.707,61.695c0,34.015,27.686,61.701,61.707,61.701c13.073,0,25.802-4.208,36.304-11.862l35.388,35.387  L1469.135,793.221z M1385.343,764.68c-24.586,0-44.582-20.008-44.582-44.582c0-24.58,19.996-44.582,44.582-44.582  c24.574,0,44.569,20.002,44.569,44.582c0,13.144-5.762,25.555-15.805,34.05C1406.085,760.934,1395.868,764.68,1385.343,764.68z" Stretch="Fill" Width="16" Height="16" Fill="{DynamicResource IconButtonPathBrush}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
						<Border x:Name="DisabledVisualElement" Background="#ADD3D3D3" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Grid>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TitleBorderStyle" TargetType="{x:Type Border}">
	<Setter Property="Height" Value="28"/>
    <Setter Property="Background" Value="{StaticResource TitleGBrush}"/>
   <Setter Property="Padding" Value="3"/>
	</Style>
	<Style x:Key="MinRightArrowButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Custom:ButtonHelper.CornerRadius" Value="3"/>
		<Setter Property="MinHeight" Value="26"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
		<Setter Property="Background" Value="{DynamicResource ButonBGBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ButonBGBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource ButonTextBrush}"/>
		<Setter Property="Padding" Value="4,4"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
											<EasingColorKeyFrame KeyTime="0" Value="#FF134E68"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Background" Background="#FF1C6F93"/>
						<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						<Path Data="M100,49.973c-0.021,2.749-0.953,5.438-2.734,7.633c-0.758,1.096-36.082,36.61-36.082,36.61  c-8.877,9.861-24.229-4.475-15.601-14.058l14.364-17.39H9.848c-6.677,0.116-9.988-6.397-9.843-12.741  c-0.148-6.401,3.163-12.912,9.843-12.795h50.099l-14.364-17.39c-8.628-9.584,6.724-23.92,15.601-14.059  c0,0,35.324,35.515,36.082,36.61C99.045,44.589,99.979,47.279,100,49.973z" Stretch="Fill" Width="16" Height="16" Fill="{DynamicResource IconButtonPathBrush}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
						<Border x:Name="DisabledVisualElement" Background="#ADD3D3D3" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Grid>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="MinLefttArrowButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Custom:ButtonHelper.CornerRadius" Value="3"/>
		<Setter Property="MinHeight" Value="26"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
		<Setter Property="Background" Value="{DynamicResource ButonBGBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ButonBGBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource ButonTextBrush}"/>
		<Setter Property="Padding" Value="4,4"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
											<EasingColorKeyFrame KeyTime="0" Value="#FF134E68"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Background" Background="#FF1C6F93"/>
						<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						<Path Data="M100,49.973c-0.021,2.749-0.953,5.438-2.734,7.633c-0.758,1.096-36.082,36.61-36.082,36.61  c-8.877,9.861-24.229-4.475-15.601-14.058l14.364-17.39H9.848c-6.677,0.116-9.988-6.397-9.843-12.741  c-0.148-6.401,3.163-12.912,9.843-12.795h50.099l-14.364-17.39c-8.628-9.584,6.724-23.92,15.601-14.059  c0,0,35.324,35.515,36.082,36.61C99.045,44.589,99.979,47.279,100,49.973z" Stretch="Fill" Width="16" Height="16" Fill="{DynamicResource IconButtonPathBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
							<Path.RenderTransform>
								<TransformGroup>
									<ScaleTransform ScaleY="1" ScaleX="-1"/>
									<SkewTransform AngleY="0" AngleX="0"/>
									<RotateTransform Angle="0"/>
									<TranslateTransform/>
								</TransformGroup>
							</Path.RenderTransform>
						</Path>

						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
						<Border x:Name="DisabledVisualElement" Background="#ADD3D3D3" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Grid>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="MinSelectButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Custom:ButtonHelper.CornerRadius" Value="3"/>
		<Setter Property="MinHeight" Value="26"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
		<Setter Property="Background" Value="{DynamicResource ButonBGBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ButonBGBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource ButonTextBrush}"/>
		<Setter Property="Padding" Value="4,4"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
											<EasingColorKeyFrame KeyTime="0" Value="#FF134E68"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Background" Background="#FF1C6F93"/>
						<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						<Path Stretch="Fill" Height="5" Fill="{DynamicResource IconButtonPathBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" Data="M929.749,1521.097c-97.722,0-177.831,80.576-177.831,178.299s80.109,177.831,177.831,177.831
		c97.723,0,177.832-80.109,177.832-177.831C1107.581,1601.673,1027.472,1521.097,929.749,1521.097z M1399.767,1521.097
		c-97.723,0-177.832,80.576-177.832,178.299s80.109,177.831,177.832,177.831s178.298-80.109,178.298-177.831
		C1578.064,1601.673,1497.489,1521.097,1399.767,1521.097z M1870.25,1521.097c-97.722,0-177.831,80.576-177.831,178.299
		s80.109,177.831,177.831,177.831c97.723,0,177.832-80.109,177.832-177.831C2048.082,1601.673,1967.973,1521.097,1870.25,1521.097z
		 M929.749,1610.713c49.291,0,88.216,39.393,88.216,88.683c0,49.291-38.925,88.215-88.216,88.215
		c-49.29,0-88.216-38.924-88.216-88.215C841.533,1650.106,880.459,1610.713,929.749,1610.713z M1399.767,1610.713
		c49.29,0,88.683,39.393,88.683,88.683c0,49.291-39.393,88.215-88.683,88.215s-88.216-38.924-88.216-88.215
		C1311.551,1650.106,1350.477,1610.713,1399.767,1610.713z M1870.25,1610.713c49.291,0,88.217,39.393,88.217,88.683
		c0,49.291-38.926,88.215-88.217,88.215c-49.29,0-88.215-38.924-88.215-88.215C1782.035,1650.106,1820.96,1610.713,1870.25,1610.713
		z" Width="19"/>
						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
						<Border x:Name="DisabledVisualElement" Background="#ADD3D3D3" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Grid>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="MonthlyRadRadioButtonStyle" TargetType="{x:Type telerik:RadRadioButton}">
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="BorderBrush" Value="#FF848484"/>
    	<Setter Property="Background">
    		<Setter.Value>
    			<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    				<GradientStop Color="White" Offset="0"/>
    				<GradientStop Color="Gainsboro" Offset="0.5"/>
    				<GradientStop Color="#FFADADAD" Offset="0.5"/>
    				<GradientStop Color="#FFD4D4D4" Offset="1"/>
    			</LinearGradientBrush>
    		</Setter.Value>
    	</Setter>
    	<Setter Property="Foreground" Value="Black"/>
    	<Setter Property="CornerRadius" Value="1"/>
    	<Setter Property="Padding" Value="3"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type telerik:RadRadioButton}">
    				<Grid SnapsToDevicePixels="True" Background="#00000000" ToolTip="Monthly">
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="MouseOver">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path1">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed"/>
    							<VisualState x:Name="Disabled">
    								
    							</VisualState>
    							<VisualState x:Name="DisabledChecked">
    								
    							</VisualState>
    							<VisualState x:Name="MouseOverChecked"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="BackgroundVisibility">
    							<VisualState x:Name="BackgroundIsHidden"/>
    							<VisualState x:Name="BackgroundIsVisible"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="CheckStates">
    							<VisualState x:Name="Checked">
    								<Storyboard>
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
    										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unchecked"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStatesGroup">
    							<VisualState x:Name="Unfocused1"/>
    							<VisualState x:Name="Focused1"/>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Path x:Name="path" Data="M11.366,11.947 L13.005001,11.947 C13.17,11.947 13.305999,12.083 13.305999,12.248 L13.305999,13.887 C13.305999,14.052 13.17,14.188 13.005001,14.188 L11.366,14.188 C11.201,14.188 11.066,14.052 11.066,13.887 L11.066,12.248 C11.066,12.083 11.201,11.947 11.366,11.947 z M8.5139995,11.947 L10.154,11.947 C10.319,11.947 10.454,12.083 10.454,12.248 L10.454,13.887 C10.454,14.052 10.319,14.188 10.154,14.188 L8.5139995,14.188 C8.3499999,14.188 8.2149997,14.052 8.2149997,13.887 L8.2149997,12.248 C8.2149997,12.083 8.348,11.947 8.5139995,11.947 z M5.664,11.947 L7.303,11.947 C7.4679999,11.947 7.6030002,12.083 7.6030002,12.248 L7.6030002,13.887 C7.6030002,14.052 7.4679999,14.188 7.303,14.188 L5.664,14.188 C5.4990001,14.188 5.3639998,14.052 5.3639998,13.887 L5.3639998,12.248 C5.3639998,12.083 5.4990001,11.947 5.664,11.947 z M2.8129997,11.947 L4.4520001,11.947 C4.6170001,11.947 4.7520003,12.083 4.7520003,12.248 L4.7520003,13.887 C4.7520003,14.052 4.6170001,14.188 4.4520001,14.188 L2.8129997,14.188 C2.6479998,14.188 2.513,14.052 2.513,13.887 L2.513,12.248 C2.513,12.083 2.6479998,11.947 2.8129997,11.947 z M11.365,9.0039998 L13.003999,9.0039998 C13.169,9.0039998 13.305,9.1390001 13.305,9.304 L13.305,10.943 C13.305,11.108 13.169,11.242 13.003999,11.242 L11.365,11.242 C11.199,11.242 11.064,11.108 11.064,10.943 L11.064,9.304 C11.064,9.1390001 11.199,9.0039998 11.365,9.0039998 z M8.5139995,9.0039998 L10.154,9.0039998 C10.319,9.0039998 10.454,9.1390001 10.454,9.304 L10.454,10.943 C10.454,11.108 10.319,11.242 10.154,11.242 L8.5139995,11.242 C8.3499999,11.242 8.2149997,11.108 8.2149997,10.943 L8.2149997,9.304 C8.2149997,9.1390001 8.348,9.0039998 8.5139995,9.0039998 z M5.664,9.0039998 L7.303,9.0039998 C7.4679999,9.0039998 7.6030002,9.1390001 7.6030002,9.304 L7.6030002,10.943 C7.6030002,11.108 7.4679999,11.242 7.303,11.242 L5.664,11.242 C5.4990001,11.242 5.3639998,11.108 5.3639998,10.943 L5.3639998,9.304 C5.3639998,9.1390001 5.4979997,9.0039998 5.664,9.0039998 z M2.8129997,9.0039998 L4.4520001,9.0039998 C4.6170001,9.0039998 4.7520003,9.1390001 4.7520003,9.304 L4.7520003,10.943 C4.7520003,11.108 4.6170001,11.242 4.4520001,11.242 L2.8129997,11.242 C2.6479998,11.242 2.513,11.108 2.513,10.943 L2.513,9.304 C2.513,9.1390001 2.6479998,9.0039998 2.8129997,9.0039998 z M11.365,6.0590001 L13.003999,6.0590001 C13.169,6.0590001 13.305,6.1939999 13.305,6.3589998 L13.305,7.9980003 C13.305,8.1630002 13.169,8.2980005 13.003999,8.2980005 L11.365,8.2980005 C11.2,8.2980005 11.065,8.1630002 11.065,7.9980003 L11.065,6.3589998 C11.065,6.1939999 11.2,6.0590001 11.365,6.0590001 z M8.5139995,6.0590001 L10.154,6.0590001 C10.319,6.0590001 10.454,6.1939999 10.454,6.3589998 L10.454,7.9980003 C10.454,8.1630002 10.319,8.2980005 10.154,8.2980005 L8.5139995,8.2980005 C8.3499999,8.2980005 8.2149997,8.1630002 8.2149997,7.9980003 L8.2149997,6.3589998 C8.2149997,6.1939999 8.348,6.0590001 8.5139995,6.0590001 z M5.664,6.0590001 L7.303,6.0590001 C7.4679999,6.0590001 7.6030002,6.1939999 7.6030002,6.3589998 L7.6030002,7.9980003 C7.6030002,8.1630002 7.4679999,8.2980005 7.303,8.2980005 L5.664,8.2980005 C5.4990001,8.2980005 5.3639998,8.1630002 5.3639998,7.9980003 L5.3639998,6.3589998 C5.3639998,6.1939999 5.4979997,6.0590001 5.664,6.0590001 z M6.2389998,1.811 L9.5799994,1.811 C9.7450004,1.811 9.8799996,1.946 9.8799996,2.1109999 L9.8799996,2.6569999 C9.8799996,2.8220001 9.7450004,2.9569999 9.5799994,2.9569999 L6.2389998,2.9569999 C6.0739999,2.9569999 5.9389997,2.8220001 5.9389997,2.6569999 L5.9389997,2.1109999 C5.9389997,1.946 6.0739999,1.811 6.2389998,1.811 z M0.57299995,1.8100001 L2.9860001,1.8100001 2.9860001,2.956 1.1459999,2.956 1.1459999,15.396001 C3.336,15.396001 11.067,15.396001 11.067,15.396001 11.067,15.396001 13.527999,15.396001 14.670999,15.396001 L14.670999,2.9569999 12.831001,2.9569999 12.831001,1.811 15.243999,1.811 C15.561,1.811 15.818,2.067 15.818,2.383 L15.818,15.97 C15.818,16.35 15.565,16.542001 15.065,16.542001 L11.067,16.542001 1.0239997,16.542001 C0.4749999,16.542001 0,16.542001 0,15.97 L0,2.383 C0,2.067 0.25699997,1.8100001 0.57299995,1.8100001 z M11.354,0 C11.918001,0 12.374,0.45600009 12.374,1.018 L12.374,1.811 12.374,2.9569999 12.374,3.6170002 C12.374,4.179 11.916999,4.6349999 11.354,4.6349999 10.794,4.6349999 10.339,4.1799999 10.338,3.6170002 L10.338,2.956 10.338,1.8100001 10.338,1.018 C10.338,0.45600009 10.792,0 11.354,0 z M4.4629998,0 C5.0250001,0 5.4809995,0.45600009 5.4809995,1.018 L5.4809995,1.811 5.4809995,2.9569999 5.4809995,3.6170002 C5.4809995,4.179 5.0250001,4.6349999 4.4629998,4.6349999 3.9000001,4.6349999 3.4449997,4.1799999 3.4449997,3.6170002 L3.4449997,2.956 3.4449997,1.8100001 3.4449997,1.018 C3.4449997,0.45600009 3.9000001,0 4.4629998,0 z" Stretch="Fill" Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="#FF0074FF" Opacity="0.2"/>
    					<Path x:Name="path1" Data="M11.366,11.947 L13.005001,11.947 C13.17,11.947 13.305999,12.083 13.305999,12.248 L13.305999,13.887 C13.305999,14.052 13.17,14.188 13.005001,14.188 L11.366,14.188 C11.201,14.188 11.066,14.052 11.066,13.887 L11.066,12.248 C11.066,12.083 11.201,11.947 11.366,11.947 z M8.5139995,11.947 L10.154,11.947 C10.319,11.947 10.454,12.083 10.454,12.248 L10.454,13.887 C10.454,14.052 10.319,14.188 10.154,14.188 L8.5139995,14.188 C8.3499999,14.188 8.2149997,14.052 8.2149997,13.887 L8.2149997,12.248 C8.2149997,12.083 8.348,11.947 8.5139995,11.947 z M5.664,11.947 L7.303,11.947 C7.4679999,11.947 7.6030002,12.083 7.6030002,12.248 L7.6030002,13.887 C7.6030002,14.052 7.4679999,14.188 7.303,14.188 L5.664,14.188 C5.4990001,14.188 5.3639998,14.052 5.3639998,13.887 L5.3639998,12.248 C5.3639998,12.083 5.4990001,11.947 5.664,11.947 z M2.8129997,11.947 L4.4520001,11.947 C4.6170001,11.947 4.7520003,12.083 4.7520003,12.248 L4.7520003,13.887 C4.7520003,14.052 4.6170001,14.188 4.4520001,14.188 L2.8129997,14.188 C2.6479998,14.188 2.513,14.052 2.513,13.887 L2.513,12.248 C2.513,12.083 2.6479998,11.947 2.8129997,11.947 z M11.365,9.0039998 L13.003999,9.0039998 C13.169,9.0039998 13.305,9.1390001 13.305,9.304 L13.305,10.943 C13.305,11.108 13.169,11.242 13.003999,11.242 L11.365,11.242 C11.199,11.242 11.064,11.108 11.064,10.943 L11.064,9.304 C11.064,9.1390001 11.199,9.0039998 11.365,9.0039998 z M8.5139995,9.0039998 L10.154,9.0039998 C10.319,9.0039998 10.454,9.1390001 10.454,9.304 L10.454,10.943 C10.454,11.108 10.319,11.242 10.154,11.242 L8.5139995,11.242 C8.3499999,11.242 8.2149997,11.108 8.2149997,10.943 L8.2149997,9.304 C8.2149997,9.1390001 8.348,9.0039998 8.5139995,9.0039998 z M5.664,9.0039998 L7.303,9.0039998 C7.4679999,9.0039998 7.6030002,9.1390001 7.6030002,9.304 L7.6030002,10.943 C7.6030002,11.108 7.4679999,11.242 7.303,11.242 L5.664,11.242 C5.4990001,11.242 5.3639998,11.108 5.3639998,10.943 L5.3639998,9.304 C5.3639998,9.1390001 5.4979997,9.0039998 5.664,9.0039998 z M2.8129997,9.0039998 L4.4520001,9.0039998 C4.6170001,9.0039998 4.7520003,9.1390001 4.7520003,9.304 L4.7520003,10.943 C4.7520003,11.108 4.6170001,11.242 4.4520001,11.242 L2.8129997,11.242 C2.6479998,11.242 2.513,11.108 2.513,10.943 L2.513,9.304 C2.513,9.1390001 2.6479998,9.0039998 2.8129997,9.0039998 z M11.365,6.0590001 L13.003999,6.0590001 C13.169,6.0590001 13.305,6.1939999 13.305,6.3589998 L13.305,7.9980003 C13.305,8.1630002 13.169,8.2980005 13.003999,8.2980005 L11.365,8.2980005 C11.2,8.2980005 11.065,8.1630002 11.065,7.9980003 L11.065,6.3589998 C11.065,6.1939999 11.2,6.0590001 11.365,6.0590001 z M8.5139995,6.0590001 L10.154,6.0590001 C10.319,6.0590001 10.454,6.1939999 10.454,6.3589998 L10.454,7.9980003 C10.454,8.1630002 10.319,8.2980005 10.154,8.2980005 L8.5139995,8.2980005 C8.3499999,8.2980005 8.2149997,8.1630002 8.2149997,7.9980003 L8.2149997,6.3589998 C8.2149997,6.1939999 8.348,6.0590001 8.5139995,6.0590001 z M5.664,6.0590001 L7.303,6.0590001 C7.4679999,6.0590001 7.6030002,6.1939999 7.6030002,6.3589998 L7.6030002,7.9980003 C7.6030002,8.1630002 7.4679999,8.2980005 7.303,8.2980005 L5.664,8.2980005 C5.4990001,8.2980005 5.3639998,8.1630002 5.3639998,7.9980003 L5.3639998,6.3589998 C5.3639998,6.1939999 5.4979997,6.0590001 5.664,6.0590001 z M6.2389998,1.811 L9.5799994,1.811 C9.7450004,1.811 9.8799996,1.946 9.8799996,2.1109999 L9.8799996,2.6569999 C9.8799996,2.8220001 9.7450004,2.9569999 9.5799994,2.9569999 L6.2389998,2.9569999 C6.0739999,2.9569999 5.9389997,2.8220001 5.9389997,2.6569999 L5.9389997,2.1109999 C5.9389997,1.946 6.0739999,1.811 6.2389998,1.811 z M0.57299995,1.8100001 L2.9860001,1.8100001 2.9860001,2.956 1.1459999,2.956 1.1459999,15.396001 C3.336,15.396001 11.067,15.396001 11.067,15.396001 11.067,15.396001 13.527999,15.396001 14.670999,15.396001 L14.670999,2.9569999 12.831001,2.9569999 12.831001,1.811 15.243999,1.811 C15.561,1.811 15.818,2.067 15.818,2.383 L15.818,15.97 C15.818,16.35 15.565,16.542001 15.065,16.542001 L11.067,16.542001 1.0239997,16.542001 C0.4749999,16.542001 0,16.542001 0,15.97 L0,2.383 C0,2.067 0.25699997,1.8100001 0.57299995,1.8100001 z M11.354,0 C11.918001,0 12.374,0.45600009 12.374,1.018 L12.374,1.811 12.374,2.9569999 12.374,3.6170002 C12.374,4.179 11.916999,4.6349999 11.354,4.6349999 10.794,4.6349999 10.339,4.1799999 10.338,3.6170002 L10.338,2.956 10.338,1.8100001 10.338,1.018 C10.338,0.45600009 10.792,0 11.354,0 z M4.4629998,0 C5.0250001,0 5.4809995,0.45600009 5.4809995,1.018 L5.4809995,1.811 5.4809995,2.9569999 5.4809995,3.6170002 C5.4809995,4.179 5.0250001,4.6349999 4.4629998,4.6349999 3.9000001,4.6349999 3.4449997,4.1799999 3.4449997,3.6170002 L3.4449997,2.956 3.4449997,1.8100001 3.4449997,1.018 C3.4449997,0.45600009 3.9000001,0 4.4629998,0 z" Stretch="Fill" Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="#FF0074FF" Opacity="0.8" Visibility="Collapsed"/>
    					<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" TextElement.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="WeeklyRadRadioButtonStyle" TargetType="{x:Type telerik:RadRadioButton}">
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="CornerRadius" Value="1"/>
    	<Setter Property="Padding" Value="3"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type telerik:RadRadioButton}">
    				<Grid Background="#00000000" ToolTip="Weekly">
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="MouseOver">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path1">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed"/>
    							<VisualState x:Name="Disabled"/>
    							<VisualState x:Name="DisabledChecked"/>
    							<VisualState x:Name="MouseOverChecked"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="BackgroundVisibility">
    							<VisualState x:Name="BackgroundIsHidden"/>
    							<VisualState x:Name="BackgroundIsVisible"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="CheckStates">
    							<VisualState x:Name="Checked">
    								<Storyboard>
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
    										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unchecked"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStatesGroup">
    							<VisualState x:Name="Unfocused1"/>
    							<VisualState x:Name="Focused1"/>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Path x:Name="path" Data="M11.365,9.0039998 L13.003999,9.0039998 C13.169,9.0039998 13.305,9.1390001 13.305,9.304 L13.305,10.943 C13.305,11.108 13.169,11.242 13.003999,11.242 L11.365,11.242 C11.199,11.242 11.064,11.108 11.064,10.943 L11.064,9.304 C11.064,9.1390001 11.199,9.0039998 11.365,9.0039998 z M8.5139995,9.0039998 L10.154,9.0039998 C10.319,9.0039998 10.454,9.1390001 10.454,9.304 L10.454,10.943 C10.454,11.108 10.319,11.242 10.154,11.242 L8.5139995,11.242 C8.3499999,11.242 8.2149997,11.108 8.2149997,10.943 L8.2149997,9.304 C8.2149997,9.1390001 8.348,9.0039998 8.5139995,9.0039998 z M5.664,9.0039998 L7.303,9.0039998 C7.4679999,9.0039998 7.6030002,9.1390001 7.6030002,9.304 L7.6030002,10.943 C7.6030002,11.108 7.4679999,11.242 7.303,11.242 L5.664,11.242 C5.4990001,11.242 5.3639998,11.108 5.3639998,10.943 L5.3639998,9.304 C5.3639998,9.1390001 5.4979997,9.0039998 5.664,9.0039998 z M2.8129997,9.0039998 L4.4520001,9.0039998 C4.6170001,9.0039998 4.7520003,9.1390001 4.7520003,9.304 L4.7520003,10.943 C4.7520003,11.108 4.6170001,11.242 4.4520001,11.242 L2.8129997,11.242 C2.6479998,11.242 2.513,11.108 2.513,10.943 L2.513,9.304 C2.513,9.1390001 2.6479998,9.0039998 2.8129997,9.0039998 z M6.2389998,1.811 L9.5799994,1.811 C9.7450004,1.811 9.8799996,1.946 9.8799996,2.1109999 L9.8799996,2.6569999 C9.8799996,2.8220001 9.7450004,2.9569999 9.5799994,2.9569999 L6.2389998,2.9569999 C6.0739999,2.9569999 5.9389997,2.8220001 5.9389997,2.6569999 L5.9389997,2.1109999 C5.9389997,1.946 6.0739999,1.811 6.2389998,1.811 z M0.57299995,1.8100001 L2.9860001,1.8100001 2.9860001,2.956 1.1459999,2.956 1.1459999,15.396001 C3.336,15.396001 11.067,15.396001 11.067,15.396001 11.067,15.396001 13.527999,15.396001 14.670999,15.396001 L14.670999,2.9569999 12.831001,2.9569999 12.831001,1.811 15.243999,1.811 C15.561,1.811 15.818,2.067 15.818,2.383 L15.818,15.97 C15.818,16.35 15.565,16.542001 15.065,16.542001 L11.067,16.542001 1.0239997,16.542001 C0.4749999,16.542001 0,16.542001 0,15.97 L0,2.383 C0,2.067 0.25699997,1.8100001 0.57299995,1.8100001 z M11.354,0 C11.918001,0 12.374,0.45600009 12.374,1.018 L12.374,1.811 12.374,2.9569999 12.374,3.6170002 C12.374,4.179 11.916999,4.6349999 11.354,4.6349999 10.794,4.6349999 10.339,4.1799999 10.338,3.6170002 L10.338,2.956 10.338,1.8100001 10.338,1.018 C10.338,0.45600009 10.792,0 11.354,0 z M4.4629998,0 C5.0250001,0 5.4809995,0.45600009 5.4809995,1.018 L5.4809995,1.811 5.4809995,2.9569999 5.4809995,3.6170002 C5.4809995,4.179 5.0250001,4.6349999 4.4629998,4.6349999 3.9000001,4.6349999 3.4449997,4.1799999 3.4449997,3.6170002 L3.4449997,2.956 3.4449997,1.8100001 3.4449997,1.018 C3.4449997,0.45600009 3.9000001,0 4.4629998,0 z" Stretch="Fill" Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="#FF0074FF" Opacity="0.2"/>
    					<Path x:Name="path1" Data="M11.365,9.0039998 L13.003999,9.0039998 C13.169,9.0039998 13.305,9.1390001 13.305,9.304 L13.305,10.943 C13.305,11.108 13.169,11.242 13.003999,11.242 L11.365,11.242 C11.199,11.242 11.064,11.108 11.064,10.943 L11.064,9.304 C11.064,9.1390001 11.199,9.0039998 11.365,9.0039998 z M8.5139995,9.0039998 L10.154,9.0039998 C10.319,9.0039998 10.454,9.1390001 10.454,9.304 L10.454,10.943 C10.454,11.108 10.319,11.242 10.154,11.242 L8.5139995,11.242 C8.3499999,11.242 8.2149997,11.108 8.2149997,10.943 L8.2149997,9.304 C8.2149997,9.1390001 8.348,9.0039998 8.5139995,9.0039998 z M5.664,9.0039998 L7.303,9.0039998 C7.4679999,9.0039998 7.6030002,9.1390001 7.6030002,9.304 L7.6030002,10.943 C7.6030002,11.108 7.4679999,11.242 7.303,11.242 L5.664,11.242 C5.4990001,11.242 5.3639998,11.108 5.3639998,10.943 L5.3639998,9.304 C5.3639998,9.1390001 5.4979997,9.0039998 5.664,9.0039998 z M2.8129997,9.0039998 L4.4520001,9.0039998 C4.6170001,9.0039998 4.7520003,9.1390001 4.7520003,9.304 L4.7520003,10.943 C4.7520003,11.108 4.6170001,11.242 4.4520001,11.242 L2.8129997,11.242 C2.6479998,11.242 2.513,11.108 2.513,10.943 L2.513,9.304 C2.513,9.1390001 2.6479998,9.0039998 2.8129997,9.0039998 z M6.2389998,1.811 L9.5799994,1.811 C9.7450004,1.811 9.8799996,1.946 9.8799996,2.1109999 L9.8799996,2.6569999 C9.8799996,2.8220001 9.7450004,2.9569999 9.5799994,2.9569999 L6.2389998,2.9569999 C6.0739999,2.9569999 5.9389997,2.8220001 5.9389997,2.6569999 L5.9389997,2.1109999 C5.9389997,1.946 6.0739999,1.811 6.2389998,1.811 z M0.57299995,1.8100001 L2.9860001,1.8100001 2.9860001,2.956 1.1459999,2.956 1.1459999,15.396001 C3.336,15.396001 11.067,15.396001 11.067,15.396001 11.067,15.396001 13.527999,15.396001 14.670999,15.396001 L14.670999,2.9569999 12.831001,2.9569999 12.831001,1.811 15.243999,1.811 C15.561,1.811 15.818,2.067 15.818,2.383 L15.818,15.97 C15.818,16.35 15.565,16.542001 15.065,16.542001 L11.067,16.542001 1.0239997,16.542001 C0.4749999,16.542001 0,16.542001 0,15.97 L0,2.383 C0,2.067 0.25699997,1.8100001 0.57299995,1.8100001 z M11.354,0 C11.918001,0 12.374,0.45600009 12.374,1.018 L12.374,1.811 12.374,2.9569999 12.374,3.6170002 C12.374,4.179 11.916999,4.6349999 11.354,4.6349999 10.794,4.6349999 10.339,4.1799999 10.338,3.6170002 L10.338,2.956 10.338,1.8100001 10.338,1.018 C10.338,0.45600009 10.792,0 11.354,0 z M4.4629998,0 C5.0250001,0 5.4809995,0.45600009 5.4809995,1.018 L5.4809995,1.811 5.4809995,2.9569999 5.4809995,3.6170002 C5.4809995,4.179 5.0250001,4.6349999 4.4629998,4.6349999 3.9000001,4.6349999 3.4449997,4.1799999 3.4449997,3.6170002 L3.4449997,2.956 3.4449997,1.8100001 3.4449997,1.018 C3.4449997,0.45600009 3.9000001,0 4.4629998,0 z" Stretch="Fill" Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="#FF0074FF" Opacity="0.8" Visibility="Collapsed"/>
    					<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" TextElement.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
	  <Style x:Key="DailyRadRadioButtonStyle" TargetType="{x:Type telerik:RadRadioButton}">
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="CornerRadius" Value="1"/>
    	<Setter Property="Padding" Value="3"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type telerik:RadRadioButton}">
    				<Grid Background="#00000000" ToolTip="Daily">
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="MouseOver">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path1">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed"/>
    							<VisualState x:Name="Disabled"/>
    							<VisualState x:Name="DisabledChecked"/>
    							<VisualState x:Name="MouseOverChecked"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="BackgroundVisibility">
    							<VisualState x:Name="BackgroundIsHidden"/>
    							<VisualState x:Name="BackgroundIsVisible"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="CheckStates">
    							<VisualState x:Name="Checked">
    								<Storyboard>
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
    										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unchecked"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStatesGroup">
    							<VisualState x:Name="Unfocused1"/>
    							<VisualState x:Name="Focused1"/>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Path x:Name="path" Data="M2.8129997,9.0039998 L4.4520001,9.0039998 C4.6170001,9.0039998 4.7520003,9.1390001 4.7520003,9.304 L4.7520003,10.943 C4.7520003,11.108 4.6170001,11.242 4.4520001,11.242 L2.8129997,11.242 C2.6479998,11.242 2.513,11.108 2.513,10.943 L2.513,9.304 C2.513,9.1390001 2.6479998,9.0039998 2.8129997,9.0039998 z M6.2389998,1.811 L9.5799994,1.811 C9.7450004,1.811 9.8799996,1.946 9.8799996,2.1109999 L9.8799996,2.6569999 C9.8799996,2.8220001 9.7450004,2.9569999 9.5799994,2.9569999 L6.2389998,2.9569999 C6.0739999,2.9569999 5.9389997,2.8220001 5.9389997,2.6569999 L5.9389997,2.1109999 C5.9389997,1.946 6.0739999,1.811 6.2389998,1.811 z M0.57299995,1.8100001 L2.9860001,1.8100001 2.9860001,2.956 1.1459999,2.956 1.1459999,15.396001 C3.336,15.396001 11.067,15.396001 11.067,15.396001 11.067,15.396001 13.527999,15.396001 14.670999,15.396001 L14.670999,2.9569999 12.831001,2.9569999 12.831001,1.811 15.243999,1.811 C15.561,1.811 15.818,2.067 15.818,2.383 L15.818,15.97 C15.818,16.35 15.565,16.542001 15.065,16.542001 L11.067,16.542001 1.0239997,16.542001 C0.4749999,16.542001 0,16.542001 0,15.97 L0,2.383 C0,2.067 0.25699997,1.8100001 0.57299995,1.8100001 z M11.354,0 C11.918001,0 12.374,0.45600009 12.374,1.018 L12.374,1.811 12.374,2.9569999 12.374,3.6170002 C12.374,4.179 11.916999,4.6349999 11.354,4.6349999 10.794,4.6349999 10.339,4.1799999 10.338,3.6170002 L10.338,2.956 10.338,1.8100001 10.338,1.018 C10.338,0.45600009 10.792,0 11.354,0 z M4.4629998,0 C5.0250001,0 5.4809995,0.45600009 5.4809995,1.018 L5.4809995,1.811 5.4809995,2.9569999 5.4809995,3.6170002 C5.4809995,4.179 5.0250001,4.6349999 4.4629998,4.6349999 3.9000001,4.6349999 3.4449997,4.1799999 3.4449997,3.6170002 L3.4449997,2.956 3.4449997,1.8100001 3.4449997,1.018 C3.4449997,0.45600009 3.9000001,0 4.4629998,0 z" Stretch="Fill" Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="#FF0074FF" Opacity="0.2"/>
    					<Path x:Name="path1" Data="M2.8129997,9.0039998 L4.4520001,9.0039998 C4.6170001,9.0039998 4.7520003,9.1390001 4.7520003,9.304 L4.7520003,10.943 C4.7520003,11.108 4.6170001,11.242 4.4520001,11.242 L2.8129997,11.242 C2.6479998,11.242 2.513,11.108 2.513,10.943 L2.513,9.304 C2.513,9.1390001 2.6479998,9.0039998 2.8129997,9.0039998 z M6.2389998,1.811 L9.5799994,1.811 C9.7450004,1.811 9.8799996,1.946 9.8799996,2.1109999 L9.8799996,2.6569999 C9.8799996,2.8220001 9.7450004,2.9569999 9.5799994,2.9569999 L6.2389998,2.9569999 C6.0739999,2.9569999 5.9389997,2.8220001 5.9389997,2.6569999 L5.9389997,2.1109999 C5.9389997,1.946 6.0739999,1.811 6.2389998,1.811 z M0.57299995,1.8100001 L2.9860001,1.8100001 2.9860001,2.956 1.1459999,2.956 1.1459999,15.396001 C3.336,15.396001 11.067,15.396001 11.067,15.396001 11.067,15.396001 13.527999,15.396001 14.670999,15.396001 L14.670999,2.9569999 12.831001,2.9569999 12.831001,1.811 15.243999,1.811 C15.561,1.811 15.818,2.067 15.818,2.383 L15.818,15.97 C15.818,16.35 15.565,16.542001 15.065,16.542001 L11.067,16.542001 1.0239997,16.542001 C0.4749999,16.542001 0,16.542001 0,15.97 L0,2.383 C0,2.067 0.25699997,1.8100001 0.57299995,1.8100001 z M11.354,0 C11.918001,0 12.374,0.45600009 12.374,1.018 L12.374,1.811 12.374,2.9569999 12.374,3.6170002 C12.374,4.179 11.916999,4.6349999 11.354,4.6349999 10.794,4.6349999 10.339,4.1799999 10.338,3.6170002 L10.338,2.956 10.338,1.8100001 10.338,1.018 C10.338,0.45600009 10.792,0 11.354,0 z M4.4629998,0 C5.0250001,0 5.4809995,0.45600009 5.4809995,1.018 L5.4809995,1.811 5.4809995,2.9569999 5.4809995,3.6170002 C5.4809995,4.179 5.0250001,4.6349999 4.4629998,4.6349999 3.9000001,4.6349999 3.4449997,4.1799999 3.4449997,3.6170002 L3.4449997,2.956 3.4449997,1.8100001 3.4449997,1.018 C3.4449997,0.45600009 3.9000001,0 4.4629998,0 z" Stretch="Fill" Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="#FF0074FF" Opacity="0.8" Visibility="Collapsed"/>
    					<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" TextElement.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
	 <Style x:Key="YearlyRadRadioButtonStyle" TargetType="{x:Type telerik:RadRadioButton}">
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="CornerRadius" Value="1"/>
    	<Setter Property="Padding" Value="3"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type telerik:RadRadioButton}">
    				<Grid Background="#00000000" ToolTip="Yearly">
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="MouseOver">
    								
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Path1">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    								
    							</VisualState>
    							<VisualState x:Name="Pressed"/>
    							<VisualState x:Name="Disabled"/>
    							<VisualState x:Name="DisabledChecked"/>
    							<VisualState x:Name="MouseOverChecked"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="BackgroundVisibility">
    							<VisualState x:Name="BackgroundIsHidden"/>
    							<VisualState x:Name="BackgroundIsVisible"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="CheckStates">
    							<VisualState x:Name="Checked">
    								<Storyboard>
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
    										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unchecked"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStatesGroup">
    							<VisualState x:Name="Unfocused1"/>
    							<VisualState x:Name="Focused1"/>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Path x:Name="path" Data="M12.145826,14.129874 C12.01519,14.129874 11.896707,14.154178 11.790375,14.202785 11.684044,14.251393 11.592903,14.319749 11.516952,14.40785 11.441001,14.495952 11.382519,14.600002 11.341505,14.720003 11.300491,14.840004 11.279984,14.972916 11.279984,15.118738 11.279984,15.279752 11.301251,15.430132 11.343783,15.56988 11.386316,15.709627 11.446318,15.831906 11.523787,15.936716 11.601257,16.041527 11.693158,16.124311 11.799489,16.185072 11.905821,16.245832 12.024304,16.276211&#xD;&#xA;12.154939,16.276211 12.285575,16.276211 12.403298,16.24963 12.508112,16.196465 12.612925,16.143299 12.702545,16.068869 12.776978,15.973172 12.85141,15.877476 12.908373,15.762033 12.947867,15.626842 12.987362,15.491652 13.007109,15.34355 13.007109,15.182536 13.007109,14.480762 12.720015,14.129874 12.145826,14.129874 z M15.716928,10.730368 L19.175734,10.730368 19.175734,11.906068 16.815178,11.906068 16.724037,13.213922 C16.957966,13.195693 17.159994,13.18658 17.330126,13.18658 18.001532,13.18658 18.527113,13.362782 18.906868,13.715189 19.286623,14.067595 19.4765,14.541521 19.4765,15.136967 19.4765,15.79621 19.250166,16.334692 18.797499,16.752415 18.344831,17.170139 17.731146,17.379 16.956448,17.379 16.327572,17.379 15.798954,17.284822 15.37059,17.096468 L15.37059,15.866083 C15.817183,16.139503 16.292637,16.276211 16.796949,16.276211 17.176704,16.276211 17.473673,16.185831 17.687855,16.005072 17.902037,15.824311 18.009127,15.578993 18.009127,15.269119 18.009127,14.622027 17.551903,14.298482 16.637453,14.298482 16.30023,14.298482 15.911362,14.324306 15.470846,14.375951 z M12.774699,10.621 C13.279014,10.621 13.67092,10.680241 13.95042,10.798722 L13.95042,12.001765 C13.619273,11.81341 13.257747,11.719233 12.865841,11.719233 12.622798,11.719233 12.402539,11.766321 12.205068,11.860498 12.007595,11.954677 11.838224,12.088348 11.696956,12.261513 11.555687,12.434678 11.444798,12.643539 11.36429,12.888098 11.283782,13.132655 11.240491,13.405314 11.234414,13.706075 L11.261757,13.706075 C11.571636,13.277719 12.028861,13.063541 12.633431,13.063541 12.903815,13.063541 13.148377,13.112148 13.367116,13.209364 13.585855,13.306581 13.772696,13.444049 13.927635,13.621771 14.082575,13.799494 14.202578,14.012912 14.287642,14.262027 14.372707,14.511142 14.415239,14.787599 14.415239,15.091396 14.415239,15.413424 14.359036,15.714185 14.246629,15.993679 14.134221,16.273174 13.977762,16.515453 13.777252,16.720516 13.576741,16.925581 13.338256,17.086594&#xD;&#xA;13.061793,17.203556 12.785333,17.320518 12.483047,17.379 12.154939,17.379 11.787336,17.379 11.458469,17.310646 11.168337,17.173937 10.878203,17.037228 10.632883,16.838999 10.432372,16.57925 10.231861,16.319502 10.078441,16.001274 9.9721088,15.624563 9.865778,15.247853 9.8126125,14.821016 9.8126125,14.344052 9.8126125,13.782025 9.8817272,13.272403 10.019958,12.815186 10.158189,12.357969 10.355661,11.966828 10.612375,11.641764 10.86909,11.316699&#xD;&#xA;11.179729,11.065306 11.544293,10.887584 11.908858,10.709862 12.318994,10.621 12.774699,10.621 z M6.3736653,10.621 C7.0420337,10.621 7.5622978,10.77138 7.9344573,11.072142 8.3066168,11.372902 8.4926968,11.763283 8.4926968,12.243285 8.4926968,13.096959 8.0597763,13.631644 7.1939354,13.847342 L7.1939354,13.870127 C7.6557174,13.927848 8.0202818,14.095696 8.2876291,14.373672 8.5549765,14.651649 8.6886501,14.992662 8.6886501,15.396715 8.6886501,16.007349 8.465354,16.490389 8.0187626,16.845833 7.5721712,17.201279 6.9554496,17.379 6.1685977,17.379 5.494153,17.379 4.9457874,17.269632 4.5235,17.050898 L4.5235,15.797729 C4.9609776,16.116716 5.4713678,16.276211 6.0546713,16.276211 6.4222736,16.276211 6.7086086,16.197224 6.9136763,16.039248 7.1187439,15.881273 7.2212777,15.661019 7.2212777,15.378487 7.2212777,15.08684 7.09444,14.862029 6.8407636,14.704053 6.5870872,14.546079 6.2384725,14.467091 5.794919,14.467091 L5.1888304,14.467091 5.1888304,13.364302 5.7493482,13.364302 C6.599999,13.364302 7.0253243,13.081769 7.0253243,12.516704 7.0253243,11.985056 6.6987352,11.719233 6.045557,11.719233 5.6080794,11.719233 5.182754,11.860498 4.7695808,12.143031 L4.7695808,10.967331 C5.2283249,10.736444 5.7630196,10.621 6.3736653,10.621 z M9.4661779,2.6274934 L14.535338,2.6274934 C14.785689,2.6274934 14.990517,2.8233585 14.990517,3.0627489 L14.990517,3.8549142 C14.990517,4.094305 14.785689,4.2901702 14.535338,4.2901702 L9.4661779,4.2901702 C9.2158298,4.2901702 9.0109997,4.094305 9.0109997,3.8549142 L9.0109997,3.0627489 C9.0109997,2.8233585 9.2158298,2.6274934 9.4661779,2.6274934 z M0.86938941,2.6260424 L4.5305352,2.6260424 4.5305352,4.2887197 1.7387785,4.2887197 1.7387785,22.337322 C5.0615754,22.337322 16.791504,22.337322 16.791504,22.337322 16.791504,22.337322 20.525476,22.337322 22.259703,22.337322 L22.259703,4.2901702 19.467951,4.2901702 19.467951,2.6274934 23.129091,2.6274934 C23.610065,2.6274934 24,2.9989116 24,3.4573808 L24,23.170111 C24,23.721436 23.616135,24 22.857504,24 L16.791504,24 1.5536728,24 C0.72069782,24 0,24 0,23.170111 L0,3.4573808 C0,2.9989116 0.38993549,2.6260426 0.86938941,2.6260424 z M17.226957,0 C18.082693,0 18.774561,0.66158879 18.774561,1.4769677 L18.774561,2.6274934 18.774561,4.2901702 18.774561,5.2477326 C18.774561,6.0631113 18.081173,6.7247 17.226957,6.7247 16.377293,6.7247 15.686939,6.0645623 15.685423,5.2477326 L15.685423,4.2887197 15.685423,2.6260424 15.685423,1.4769677 C15.685423,0.66158879 16.374258,0 17.226957,0 z M6.7715263,0 C7.6242261,0 8.3160954,0.66158879 8.3160954,1.4769677 L8.3160954,2.6274934 8.3160954,4.2901702 8.3160954,5.2477326 C8.3160954,6.0631113 7.6242261,6.7247 6.7715263,6.7247 5.9173098,6.7247 5.2269564,6.0645623 5.2269564,5.2477326 L5.2269564,4.2887197 5.2269564,2.6260424 5.2269564,1.4769677 C5.2269564,0.66158879 5.9173098,0 6.7715263,0 z" Fill="#FF0074FF" HorizontalAlignment="Center" Height="24" Opacity="0.2" Stretch="Fill" VerticalAlignment="Center" Width="24"/>
    					<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" TextElement.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
    					<Path x:Name="Path1" Fill="#FF0074FF" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M12.145826,14.129875 C12.01519,14.129875 11.896707,14.154178 11.790375,14.202786 11.684044,14.251394 11.592903,14.319749 11.516952,14.40785 11.441001,14.495952 11.382519,14.600003 11.341505,14.720004 11.300491,14.840004 11.279984,14.972916 11.279985,15.118739 11.279984,15.279752 11.301251,15.430133 11.343783,15.56988 11.386316,15.709628 11.446317,15.831906 11.523787,15.936717 11.601257,16.041528 11.693158,16.124312 11.799489,16.185072 11.90582,16.245832 12.024304,16.276212&#xD;&#xA;12.154939,16.276212 12.285575,16.276212 12.403299,16.249629 12.508111,16.196465 12.612924,16.143301 12.702546,16.06887 12.776978,15.973172 12.85141,15.877476 12.908373,15.762033 12.947868,15.626842 12.987361,15.491652 13.007109,15.343551 13.007109,15.182537 13.007109,14.480762 12.720015,14.129875 12.145826,14.129875 z M15.716927,10.730368 L19.175733,10.730368 19.175733,11.906069 16.815178,11.906069 16.724038,13.213922 C16.957966,13.195694 17.159995,13.18658 17.330126,13.18658 18.001533,13.18658 18.527113,13.362783 18.906868,13.715189 19.286623,14.067596 19.4765,14.541522 19.4765,15.136967 19.4765,15.796211 19.250166,16.334693 18.797498,16.752416 18.344831,17.170139 17.731146,17.379001 16.956447,17.379001 16.327572,17.379001 15.798954,17.284823 15.370591,17.096468 L15.370591,15.866084 C15.817183,16.139503 16.292636,16.276212 16.79695,16.276212 17.176705,16.276212 17.473672,16.185832 17.687855,16.005072 17.902036,15.824312 18.009127,15.578994 18.009127,15.26912 18.009127,14.622028 17.551902,14.298483 16.637453,14.298483 16.300231,14.298483 15.911362,14.324306 15.470846,14.375951 z M12.7747,10.621 C13.279013,10.621001 13.670921,10.680241 13.95042,10.798723 L13.95042,12.001765 C13.619274,11.81341 13.257747,11.719233 12.86584,11.719233 12.622797,11.719233 12.40254,11.766322 12.205067,11.860499 12.007595,11.954677 11.838224,12.088348 11.696956,12.261513 11.555687,12.434678 11.444798,12.64354 11.36429,12.888098 11.283782,13.132656 11.24049,13.405315 11.234414,13.706075 L11.261757,13.706075 C11.571636,13.277719 12.028862,13.063541 12.633431,13.063541 12.903816,13.063541 13.148378,13.112149 13.367116,13.209365 13.585855,13.306581 13.772695,13.444049 13.927636,13.621771 14.082574,13.799494 14.202577,14.012913 14.287643,14.262027 14.372707,14.511142 14.41524,14.787599 14.41524,15.091397 14.41524,15.413424 14.359037,15.714185 14.246629,15.99368 14.134221,16.273174 13.977763,16.515453 13.777252,16.720518 13.576742,16.925581 13.338256,17.086595&#xD;&#xA;13.061794,17.203557 12.785333,17.320519 12.483047,17.379001 12.154939,17.379001 11.787337,17.379001 11.458469,17.310646 11.168337,17.173937 10.878204,17.037227 10.632883,16.838999 10.432372,16.579251 10.231862,16.319503 10.078441,16.001274 9.9721093,15.624563 9.8657784,15.247853 9.8126121,14.821017 9.8126121,14.344052 9.8126121,13.782026 9.8817277,13.272403 10.019958,12.815186 10.158189,12.35797 10.355661,11.966828 10.612376,11.641764 10.86909,11.3167&#xD;&#xA;11.179729,11.065306 11.544294,10.887584 11.908859,10.709862 12.318994,10.621001 12.7747,10.621 z M6.3736652,10.621 C7.0420337,10.621001 7.5622976,10.771381 7.9344573,11.072142 8.3066168,11.372903 8.4926968,11.763283 8.4926968,12.243285 8.4926968,13.096959 8.0597763,13.631645 7.1939354,13.847342 L7.1939354,13.870127 C7.6557174,13.927849 8.020282,14.095697 8.2876294,14.373672 8.5549765,14.651649 8.6886501,14.992662 8.6886501,15.396715 8.6886501,16.00735 8.4653544,16.49039 8.0187626,16.845834 7.5721712,17.201279 6.9554493,17.379001 6.1685978,17.379001 5.4941532,17.379001 4.9457873,17.269633 4.5235,17.050899 L4.5235,15.797729 C4.9609775,16.116718 5.4713679,16.276212 6.0546712,16.276212 6.4222738,16.276212 6.7086089,16.197224 6.9136765,16.039248 7.1187441,15.881274 7.221278,15.661019 7.221278,15.378487 7.221278,15.08684 7.0944397,14.86203 6.8407636,14.704054 6.5870874,14.546079 6.2384726,14.467091 5.7949189,14.467091 L5.1888305,14.467091 5.1888305,13.364301 5.7493485,13.364301 C6.5999992,13.364302 7.0253246,13.08177 7.0253246,12.516704 7.0253246,11.985056 6.6987352,11.719233 6.045557,11.719233 5.6080794,11.719233 5.1827541,11.860499 4.7695809,12.143032 L4.7695809,10.967331 C5.2283247,10.736444 5.7630196,10.621001 6.3736652,10.621 z M9.4661775,2.6274939 L14.535339,2.6274939 C14.785688,2.6274939 14.990516,2.8233585 14.990516,3.0627494 L14.990516,3.8549147 C14.990516,4.0943055 14.785688,4.2901702 14.535339,4.2901702 L9.4661775,4.2901702 C9.2158298,4.2901702 9.0109997,4.0943055 9.0109997,3.8549147 L9.0109997,3.0627494 C9.0109997,2.8233585 9.2158298,2.6274939 9.4661775,2.6274939 z M0.8693893,2.6260428 L4.5305349,2.6260428 4.5305349,4.2887197 1.7387784,4.2887197 1.7387784,22.337322 C5.0615754,22.337322 16.791503,22.337322 16.791503,22.337322 16.791503,22.337322 20.525476,22.337322 22.259702,22.337322 L22.259702,4.2901702 19.467949,4.2901702 19.467949,2.6274939 23.129093,2.6274939 C23.610065,2.6274939 24,2.9989119 24,3.4573812 L24,23.170111 C24,23.721435 23.616134,23.999999 22.857503,23.999999 L16.791503,23.999999 1.5536723,23.999999 C0.72069764,23.999999 0,23.999999 0,23.170111 L0,3.4573812 C0,2.9989119 0.38993549,2.6260428 0.8693893,2.6260428 z M17.226957,0 C18.082693,0 18.77456,0.66158867 18.77456,1.4769678 L18.77456,2.6274939 18.77456,4.2901702 18.77456,5.2477331 C18.77456,6.0631118 18.081172,6.7247002 17.226957,6.7247002 16.377292,6.7247002 15.686939,6.0645623 15.685421,5.2477331 L15.685421,4.2887197 15.685421,2.6260428 15.685421,1.4769678 C15.685421,0.66158867 16.374258,0 17.226957,0 z M6.7715259,0 C7.6242259,0 8.3160949,0.66158867 8.3160949,1.4769678 L8.3160949,2.6274939 8.3160949,4.2901702 8.3160949,5.2477331 C8.3160949,6.0631118 7.6242259,6.7247002 6.7715259,6.7247002 5.9173095,6.7247002 5.2269562,6.0645623 5.2269561,5.2477331 L5.2269561,4.2887197 5.2269561,2.6260428 5.2269561,1.4769678 C5.2269562,0.66158867 5.9173095,0 6.7715259,0 z" Height="24" Opacity="0.8" Stretch="Fill" Width="24" Visibility="Collapsed"/>
    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
	 <Style x:Key="FocusVisual">
	 	<Setter Property="Control.Template">
	 		<Setter.Value>
	 			<ControlTemplate>
	 				<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
	 			</ControlTemplate>
	 		</Setter.Value>
	 	</Setter>
	 </Style>
	 <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
	 <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
	 <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
	 <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
	 <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
	 <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
	 <Style x:Key="MenuListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
	 	<Setter Property="SnapsToDevicePixels" Value="True"/>
	 	<Setter Property="Padding" Value="0"/>
	 	<Setter Property="Background" Value="Transparent"/>
	 	<Setter Property="BorderBrush" Value="Transparent"/>
	 	<Setter Property="BorderThickness" Value="1"/>
	 	<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
	 	<Setter Property="Template">
	 		<Setter.Value>
	 			<ControlTemplate TargetType="{x:Type ListBoxItem}">
	 				<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
	 					<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
	 				</Border>
	 				<ControlTemplate.Triggers>
	 					<MultiTrigger>
	 						<MultiTrigger.Conditions>
	 							<Condition Property="IsMouseOver" Value="True"/>
	 						</MultiTrigger.Conditions>
	 						<Setter Property="Background" TargetName="Bd" Value="#FF1C486E"/>
	 					</MultiTrigger>
	 					<MultiTrigger>
	 						<MultiTrigger.Conditions>
	 							<Condition Property="Selector.IsSelectionActive" Value="False"/>
	 							<Condition Property="IsSelected" Value="True"/>
	 						</MultiTrigger.Conditions>
	 						<Setter Property="Background" TargetName="Bd" Value="#FF1C486E"/>
	 					</MultiTrigger>
	 					<MultiTrigger>
	 						<MultiTrigger.Conditions>
	 							<Condition Property="Selector.IsSelectionActive" Value="True"/>
	 							<Condition Property="IsSelected" Value="True"/>
	 						</MultiTrigger.Conditions>
	 						<Setter Property="Background" TargetName="Bd" Value="#FF1C486E"/>
	 					</MultiTrigger>
	 					<Trigger Property="IsEnabled" Value="False">
	 						<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
	 					</Trigger>
	 				</ControlTemplate.Triggers>
	 			</ControlTemplate>
	 		</Setter.Value>
	 	</Setter>
	 </Style>
    <!--***************************************************************************
    Data Grid For Edit Button Style
    ***************************************************************************-->

    <Style x:Key="EditButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="MaxWidth" Value="24"/>
        <Setter Property="MaxHeight" Value="24"/>
        <Setter Property="ToolTipService.ToolTip" Value="Edit"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Cursor="Hand" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.995" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisableBoder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" BorderBrush="{StaticResource ControllersMousehoverBoderBrush}" BorderThickness="2" Opacity="0"/>
                        <Grid Margin="2" >
                            <Rectangle Fill="{StaticResource EditButtonBGBrush}" x:Name="Rect" Visibility="Visible" />
                            <Path Data="M0,44.439791L18.98951,54.569246 0.47998798,62.66881z M17.428029,12.359973L36.955557,23.568769 21.957478,49.686174 20.847757,46.346189 15.11851,45.756407 14.138656,42.166935 8.5292659,41.966761 6.9493899,38.037481 2.4399572,38.477377z M26.812517,0.0009765625C27.350616,-0.012230873,27.875986,0.10826397,28.348372,0.3782568L42.175028,8.3180408C43.85462,9.2780154,44.234529,11.777948,43.02482,13.89789L41.375219,16.767812 21.460039,5.3381228 23.10964,2.4582005C23.979116,0.941679,25.437378,0.034730911,26.812517,0.0009765625z" Stretch="Uniform" Fill="{StaticResource EditButtonPathBrush}" Width="15" Height="15" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="False" />
                        </Grid>
                        <Border x:Name="DisableBoder" Background="{StaticResource ControllersDesabledBackGroundBrush}" Opacity="0.55" Visibility="Collapsed" BorderBrush="{StaticResource ControllersDesabledBoderBrush}" BorderThickness="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
    ***************************************************************************
    Data Grid For Delete Button Style
    ***************************************************************************
    -->
    <Style x:Key="DeleteButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="MaxWidth" Value="24"/>
        <Setter Property="MaxHeight" Value="24"/>
        <Setter Property="ToolTipService.ToolTip" Value="Delete"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Cursor="Hand" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.995" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisableBoder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" BorderBrush="{StaticResource ControllersMousehoverBoderBrush}" BorderThickness="2" Opacity="0"/>
                        <Grid Margin="2" >
                            <Rectangle Fill="{StaticResource DeleteButtonBGBrush}" x:Name="Rect" Visibility="Visible" />
                            <Path Data="F1M608.038,178.012L595.565,165.539 576.036,185.068 556.509,165.54 544.038,178.012 563.565,197.539 544.038,217.066 556.512,229.538 576.038,210.012 595.565,229.539 608.036,217.068 588.509,197.54 608.038,178.012z" Stretch="Uniform" Fill="{StaticResource DeleteButtonPathBrush}" Width="14" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="False" />
                        </Grid>
                        <Border x:Name="DisableBoder" Background="{StaticResource ControllersDesabledBackGroundBrush}" Opacity="0.55" Visibility="Collapsed" BorderBrush="{StaticResource ControllersDesabledBoderBrush}" BorderThickness="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>